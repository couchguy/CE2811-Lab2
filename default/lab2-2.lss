
lab2-2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001154  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000122  00800060  00001154  000011c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 00000180  00000000  00000000  000012ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000280  00000000  00000000  0000146a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001ee7  00000000  00000000  000016ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00001051  00000000  00000000  000035d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000012da  00000000  00000000  00004622  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000260  00000000  00000000  000058fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000003f5  00000000  00000000  00005b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000836  00000000  00000000  00005f51  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000050  00000000  00000000  00006787  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e5       	ldi	r30, 0x54	; 84
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 98 00 	call	0x130	; 0x130 <main>
      7a:	0c 94 a8 08 	jmp	0x1150	; 0x1150 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <delay_ms>:

// delay for ms milli-seconds 
// delay times are only half-way accurate if optimization is turned on!

void delay_ms(uint16_t ms) 
{
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	00 d0       	rcall	.+0      	; 0x88 <delay_ms+0x6>
      88:	00 d0       	rcall	.+0      	; 0x8a <delay_ms+0x8>
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	9c 83       	std	Y+4, r25	; 0x04
      90:	8b 83       	std	Y+3, r24	; 0x03
	volatile uint16_t i;

	for(i=ms;i>0;i--)
      92:	8b 81       	ldd	r24, Y+3	; 0x03
      94:	9c 81       	ldd	r25, Y+4	; 0x04
      96:	9a 83       	std	Y+2, r25	; 0x02
      98:	89 83       	std	Y+1, r24	; 0x01
      9a:	09 c0       	rjmp	.+18     	; 0xae <delay_ms+0x2c>
	{
		delay_us(1000);
      9c:	88 ee       	ldi	r24, 0xE8	; 232
      9e:	93 e0       	ldi	r25, 0x03	; 3
      a0:	0e 94 62 00 	call	0xc4	; 0xc4 <delay_us>

void delay_ms(uint16_t ms) 
{
	volatile uint16_t i;

	for(i=ms;i>0;i--)
      a4:	89 81       	ldd	r24, Y+1	; 0x01
      a6:	9a 81       	ldd	r25, Y+2	; 0x02
      a8:	01 97       	sbiw	r24, 0x01	; 1
      aa:	9a 83       	std	Y+2, r25	; 0x02
      ac:	89 83       	std	Y+1, r24	; 0x01
      ae:	89 81       	ldd	r24, Y+1	; 0x01
      b0:	9a 81       	ldd	r25, Y+2	; 0x02
      b2:	00 97       	sbiw	r24, 0x00	; 0
      b4:	99 f7       	brne	.-26     	; 0x9c <delay_ms+0x1a>
	{
		delay_us(1000);
	}
} 
      b6:	0f 90       	pop	r0
      b8:	0f 90       	pop	r0
      ba:	0f 90       	pop	r0
      bc:	0f 90       	pop	r0
      be:	cf 91       	pop	r28
      c0:	df 91       	pop	r29
      c2:	08 95       	ret

000000c4 <delay_us>:
// delay for us micro-seconds 
// delay times are only half-way accurate if optimization is turned on to level 3!
// max value for us is 65535/4*CYCLES_PER_US
// which is app. 17777 for 14.7456MHZ
void delay_us(uint16_t us)
{
      c4:	df 93       	push	r29
      c6:	cf 93       	push	r28
      c8:	00 d0       	rcall	.+0      	; 0xca <delay_us+0x6>
      ca:	00 d0       	rcall	.+0      	; 0xcc <delay_us+0x8>
      cc:	cd b7       	in	r28, 0x3d	; 61
      ce:	de b7       	in	r29, 0x3e	; 62
      d0:	9c 83       	std	Y+4, r25	; 0x04
      d2:	8b 83       	std	Y+3, r24	; 0x03
	uint16_t _count;
	_count=us/4*CYCLES_PER_US;
      d4:	8b 81       	ldd	r24, Y+3	; 0x03
      d6:	9c 81       	ldd	r25, Y+4	; 0x04
      d8:	96 95       	lsr	r25
      da:	87 95       	ror	r24
      dc:	96 95       	lsr	r25
      de:	87 95       	ror	r24
      e0:	cc 01       	movw	r24, r24
      e2:	a0 e0       	ldi	r26, 0x00	; 0
      e4:	b0 e0       	ldi	r27, 0x00	; 0
      e6:	bc 01       	movw	r22, r24
      e8:	cd 01       	movw	r24, r26
      ea:	0e 94 03 06 	call	0xc06	; 0xc06 <__floatunsisf>
      ee:	dc 01       	movw	r26, r24
      f0:	cb 01       	movw	r24, r22
      f2:	bc 01       	movw	r22, r24
      f4:	cd 01       	movw	r24, r26
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	30 e0       	ldi	r19, 0x00	; 0
      fa:	40 e8       	ldi	r20, 0x80	; 128
      fc:	51 e4       	ldi	r21, 0x41	; 65
      fe:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
     102:	dc 01       	movw	r26, r24
     104:	cb 01       	movw	r24, r22
     106:	bc 01       	movw	r22, r24
     108:	cd 01       	movw	r24, r26
     10a:	0e 94 af 02 	call	0x55e	; 0x55e <__fixunssfsi>
     10e:	dc 01       	movw	r26, r24
     110:	cb 01       	movw	r24, r22
     112:	9a 83       	std	Y+2, r25	; 0x02
     114:	89 83       	std	Y+1, r24	; 0x01
	
	asm volatile (
     116:	89 81       	ldd	r24, Y+1	; 0x01
     118:	9a 81       	ldd	r25, Y+2	; 0x02
     11a:	01 97       	sbiw	r24, 0x01	; 1
     11c:	f1 f7       	brne	.-4      	; 0x11a <delay_us+0x56>
     11e:	9a 83       	std	Y+2, r25	; 0x02
     120:	89 83       	std	Y+1, r24	; 0x01
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (_count)
		: "0" (_count)
	);
}
     122:	0f 90       	pop	r0
     124:	0f 90       	pop	r0
     126:	0f 90       	pop	r0
     128:	0f 90       	pop	r0
     12a:	cf 91       	pop	r28
     12c:	df 91       	pop	r29
     12e:	08 95       	ret

00000130 <main>:

#include "lcd.h"
#include <MSOE/delay.c>

int main(void)
{
     130:	df 93       	push	r29
     132:	cf 93       	push	r28
     134:	cd b7       	in	r28, 0x3d	; 61
     136:	de b7       	in	r29, 0x3e	; 62
     138:	e0 97       	sbiw	r28, 0x30	; 48
     13a:	0f b6       	in	r0, 0x3f	; 63
     13c:	f8 94       	cli
     13e:	de bf       	out	0x3e, r29	; 62
     140:	0f be       	out	0x3f, r0	; 63
     142:	cd bf       	out	0x3d, r28	; 61
	uint16_t delay = 2000;
     144:	80 ed       	ldi	r24, 0xD0	; 208
     146:	97 e0       	ldi	r25, 0x07	; 7
     148:	98 87       	std	Y+8, r25	; 0x08
     14a:	8f 83       	std	Y+7, r24	; 0x07
	lcd_init();
     14c:	0e 94 9b 01 	call	0x336	; 0x336 <lcd_init>

	char test[] = "sample";
     150:	ce 01       	movw	r24, r28
     152:	09 96       	adiw	r24, 0x09	; 9
     154:	9b a3       	std	Y+35, r25	; 0x23
     156:	8a a3       	std	Y+34, r24	; 0x22
     158:	e8 e6       	ldi	r30, 0x68	; 104
     15a:	f0 e0       	ldi	r31, 0x00	; 0
     15c:	fd a3       	std	Y+37, r31	; 0x25
     15e:	ec a3       	std	Y+36, r30	; 0x24
     160:	f7 e0       	ldi	r31, 0x07	; 7
     162:	fe a3       	std	Y+38, r31	; 0x26
     164:	ec a1       	ldd	r30, Y+36	; 0x24
     166:	fd a1       	ldd	r31, Y+37	; 0x25
     168:	00 80       	ld	r0, Z
     16a:	8c a1       	ldd	r24, Y+36	; 0x24
     16c:	9d a1       	ldd	r25, Y+37	; 0x25
     16e:	01 96       	adiw	r24, 0x01	; 1
     170:	9d a3       	std	Y+37, r25	; 0x25
     172:	8c a3       	std	Y+36, r24	; 0x24
     174:	ea a1       	ldd	r30, Y+34	; 0x22
     176:	fb a1       	ldd	r31, Y+35	; 0x23
     178:	00 82       	st	Z, r0
     17a:	8a a1       	ldd	r24, Y+34	; 0x22
     17c:	9b a1       	ldd	r25, Y+35	; 0x23
     17e:	01 96       	adiw	r24, 0x01	; 1
     180:	9b a3       	std	Y+35, r25	; 0x23
     182:	8a a3       	std	Y+34, r24	; 0x22
     184:	9e a1       	ldd	r25, Y+38	; 0x26
     186:	91 50       	subi	r25, 0x01	; 1
     188:	9e a3       	std	Y+38, r25	; 0x26
     18a:	ee a1       	ldd	r30, Y+38	; 0x26
     18c:	ee 23       	and	r30, r30
     18e:	51 f7       	brne	.-44     	; 0x164 <main+0x34>
	char test2[] = "hey there";
     190:	ce 01       	movw	r24, r28
     192:	40 96       	adiw	r24, 0x10	; 16
     194:	98 a7       	std	Y+40, r25	; 0x28
     196:	8f a3       	std	Y+39, r24	; 0x27
     198:	ef e6       	ldi	r30, 0x6F	; 111
     19a:	f0 e0       	ldi	r31, 0x00	; 0
     19c:	fa a7       	std	Y+42, r31	; 0x2a
     19e:	e9 a7       	std	Y+41, r30	; 0x29
     1a0:	fa e0       	ldi	r31, 0x0A	; 10
     1a2:	fb a7       	std	Y+43, r31	; 0x2b
     1a4:	e9 a5       	ldd	r30, Y+41	; 0x29
     1a6:	fa a5       	ldd	r31, Y+42	; 0x2a
     1a8:	00 80       	ld	r0, Z
     1aa:	89 a5       	ldd	r24, Y+41	; 0x29
     1ac:	9a a5       	ldd	r25, Y+42	; 0x2a
     1ae:	01 96       	adiw	r24, 0x01	; 1
     1b0:	9a a7       	std	Y+42, r25	; 0x2a
     1b2:	89 a7       	std	Y+41, r24	; 0x29
     1b4:	ef a1       	ldd	r30, Y+39	; 0x27
     1b6:	f8 a5       	ldd	r31, Y+40	; 0x28
     1b8:	00 82       	st	Z, r0
     1ba:	8f a1       	ldd	r24, Y+39	; 0x27
     1bc:	98 a5       	ldd	r25, Y+40	; 0x28
     1be:	01 96       	adiw	r24, 0x01	; 1
     1c0:	98 a7       	std	Y+40, r25	; 0x28
     1c2:	8f a3       	std	Y+39, r24	; 0x27
     1c4:	9b a5       	ldd	r25, Y+43	; 0x2b
     1c6:	91 50       	subi	r25, 0x01	; 1
     1c8:	9b a7       	std	Y+43, r25	; 0x2b
     1ca:	eb a5       	ldd	r30, Y+43	; 0x2b
     1cc:	ee 23       	and	r30, r30
     1ce:	51 f7       	brne	.-44     	; 0x1a4 <main+0x74>
					 0b00001010,
					 0b00011111,
					 0b00011111,
					 0b00001010,
					 0b00000100,
					 0b00000000};
     1d0:	ce 01       	movw	r24, r28
     1d2:	4a 96       	adiw	r24, 0x1a	; 26
     1d4:	9d a7       	std	Y+45, r25	; 0x2d
     1d6:	8c a7       	std	Y+44, r24	; 0x2c
     1d8:	e0 e6       	ldi	r30, 0x60	; 96
     1da:	f0 e0       	ldi	r31, 0x00	; 0
     1dc:	ff a7       	std	Y+47, r31	; 0x2f
     1de:	ee a7       	std	Y+46, r30	; 0x2e
     1e0:	f8 e0       	ldi	r31, 0x08	; 8
     1e2:	f8 ab       	std	Y+48, r31	; 0x30
     1e4:	ee a5       	ldd	r30, Y+46	; 0x2e
     1e6:	ff a5       	ldd	r31, Y+47	; 0x2f
     1e8:	00 80       	ld	r0, Z
     1ea:	8e a5       	ldd	r24, Y+46	; 0x2e
     1ec:	9f a5       	ldd	r25, Y+47	; 0x2f
     1ee:	01 96       	adiw	r24, 0x01	; 1
     1f0:	9f a7       	std	Y+47, r25	; 0x2f
     1f2:	8e a7       	std	Y+46, r24	; 0x2e
     1f4:	ec a5       	ldd	r30, Y+44	; 0x2c
     1f6:	fd a5       	ldd	r31, Y+45	; 0x2d
     1f8:	00 82       	st	Z, r0
     1fa:	8c a5       	ldd	r24, Y+44	; 0x2c
     1fc:	9d a5       	ldd	r25, Y+45	; 0x2d
     1fe:	01 96       	adiw	r24, 0x01	; 1
     200:	9d a7       	std	Y+45, r25	; 0x2d
     202:	8c a7       	std	Y+44, r24	; 0x2c
     204:	98 a9       	ldd	r25, Y+48	; 0x30
     206:	91 50       	subi	r25, 0x01	; 1
     208:	98 ab       	std	Y+48, r25	; 0x30
     20a:	e8 a9       	ldd	r30, Y+48	; 0x30
     20c:	ee 23       	and	r30, r30
     20e:	51 f7       	brne	.-44     	; 0x1e4 <main+0xb4>

	while(1){

		char *testPtr = test;
     210:	ce 01       	movw	r24, r28
     212:	09 96       	adiw	r24, 0x09	; 9
     214:	9e 83       	std	Y+6, r25	; 0x06
     216:	8d 83       	std	Y+5, r24	; 0x05
		char *test2Ptr = test2;
     218:	ce 01       	movw	r24, r28
     21a:	40 96       	adiw	r24, 0x10	; 16
     21c:	9c 83       	std	Y+4, r25	; 0x04
     21e:	8b 83       	std	Y+3, r24	; 0x03
		char *customPtr = custom;
     220:	ce 01       	movw	r24, r28
     222:	4a 96       	adiw	r24, 0x1a	; 26
     224:	9a 83       	std	Y+2, r25	; 0x02
     226:	89 83       	std	Y+1, r24	; 0x01

		//sends sample to the screen
		delay_ms(delay/4);
     228:	8f 81       	ldd	r24, Y+7	; 0x07
     22a:	98 85       	ldd	r25, Y+8	; 0x08
     22c:	96 95       	lsr	r25
     22e:	87 95       	ror	r24
     230:	96 95       	lsr	r25
     232:	87 95       	ror	r24
     234:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		lcd_string(testPtr);
     238:	8d 81       	ldd	r24, Y+5	; 0x05
     23a:	9e 81       	ldd	r25, Y+6	; 0x06
     23c:	0e 94 c4 01 	call	0x388	; 0x388 <lcd_string>
		delay_ms(delay/4);
     240:	8f 81       	ldd	r24, Y+7	; 0x07
     242:	98 85       	ldd	r25, Y+8	; 0x08
     244:	96 95       	lsr	r25
     246:	87 95       	ror	r24
     248:	96 95       	lsr	r25
     24a:	87 95       	ror	r24
     24c:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//clears the screen
		lcd_ff();
     250:	0e 94 2c 02 	call	0x458	; 0x458 <lcd_ff>
		delay_ms(delay/2);
     254:	8f 81       	ldd	r24, Y+7	; 0x07
     256:	98 85       	ldd	r25, Y+8	; 0x08
     258:	96 95       	lsr	r25
     25a:	87 95       	ror	r24
     25c:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//goes to position 0,5
		lcd_gotoxy(0, 5);
     260:	80 e0       	ldi	r24, 0x00	; 0
     262:	65 e0       	ldi	r22, 0x05	; 5
     264:	0e 94 f5 01 	call	0x3ea	; 0x3ea <lcd_gotoxy>
		//snets hey there to the sreen
		lcd_string(test2Ptr);
     268:	8b 81       	ldd	r24, Y+3	; 0x03
     26a:	9c 81       	ldd	r25, Y+4	; 0x04
     26c:	0e 94 c4 01 	call	0x388	; 0x388 <lcd_string>
		delay_ms(delay/4);
     270:	8f 81       	ldd	r24, Y+7	; 0x07
     272:	98 85       	ldd	r25, Y+8	; 0x08
     274:	96 95       	lsr	r25
     276:	87 95       	ror	r24
     278:	96 95       	lsr	r25
     27a:	87 95       	ror	r24
     27c:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//goes back one char
		lcd_left();
     280:	0e 94 36 02 	call	0x46c	; 0x46c <lcd_left>
		//sents 7 to the screen
		lcd_char('7');
     284:	87 e3       	ldi	r24, 0x37	; 55
     286:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
		delay_ms(delay/4);
     28a:	8f 81       	ldd	r24, Y+7	; 0x07
     28c:	98 85       	ldd	r25, Y+8	; 0x08
     28e:	96 95       	lsr	r25
     290:	87 95       	ror	r24
     292:	96 95       	lsr	r25
     294:	87 95       	ror	r24
     296:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//turns off the backlight
		lcd_backlight(OFF);
     29a:	80 e3       	ldi	r24, 0x30	; 48
     29c:	0e 94 40 02 	call	0x480	; 0x480 <lcd_backlight>
		delay_ms(delay/2);
     2a0:	8f 81       	ldd	r24, Y+7	; 0x07
     2a2:	98 85       	ldd	r25, Y+8	; 0x08
     2a4:	96 95       	lsr	r25
     2a6:	87 95       	ror	r24
     2a8:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//turns on the the backlight
		lcd_backlight(ON);
     2ac:	81 e3       	ldi	r24, 0x31	; 49
     2ae:	0e 94 40 02 	call	0x480	; 0x480 <lcd_backlight>
		delay_ms(delay/4);
     2b2:	8f 81       	ldd	r24, Y+7	; 0x07
     2b4:	98 85       	ldd	r25, Y+8	; 0x08
     2b6:	96 95       	lsr	r25
     2b8:	87 95       	ror	r24
     2ba:	96 95       	lsr	r25
     2bc:	87 95       	ror	r24
     2be:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//clears the screen
		lcd_clear();
     2c2:	0e 94 23 02 	call	0x446	; 0x446 <lcd_clear>
		delay_ms(delay);
     2c6:	8f 81       	ldd	r24, Y+7	; 0x07
     2c8:	98 85       	ldd	r25, Y+8	; 0x08
     2ca:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//sends hey there to the screen
		lcd_string(test2Ptr);
     2ce:	8b 81       	ldd	r24, Y+3	; 0x03
     2d0:	9c 81       	ldd	r25, Y+4	; 0x04
     2d2:	0e 94 c4 01 	call	0x388	; 0x388 <lcd_string>
		delay_ms(delay/2);
     2d6:	8f 81       	ldd	r24, Y+7	; 0x07
     2d8:	98 85       	ldd	r25, Y+8	; 0x08
     2da:	96 95       	lsr	r25
     2dc:	87 95       	ror	r24
     2de:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//turns display off
		lcd_switch(OFF);
     2e2:	80 e3       	ldi	r24, 0x30	; 48
     2e4:	0e 94 55 02 	call	0x4aa	; 0x4aa <lcd_switch>
		delay_ms(delay/2);
     2e8:	8f 81       	ldd	r24, Y+7	; 0x07
     2ea:	98 85       	ldd	r25, Y+8	; 0x08
     2ec:	96 95       	lsr	r25
     2ee:	87 95       	ror	r24
     2f0:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//turns display on
		lcd_switch(ON);
     2f4:	81 e3       	ldi	r24, 0x31	; 49
     2f6:	0e 94 55 02 	call	0x4aa	; 0x4aa <lcd_switch>
		delay_ms(delay/2);
     2fa:	8f 81       	ldd	r24, Y+7	; 0x07
     2fc:	98 85       	ldd	r25, Y+8	; 0x08
     2fe:	96 95       	lsr	r25
     300:	87 95       	ror	r24
     302:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//clears the display
		lcd_clear();
     306:	0e 94 23 02 	call	0x446	; 0x446 <lcd_clear>
		delay_ms(delay/2);
     30a:	8f 81       	ldd	r24, Y+7	; 0x07
     30c:	98 85       	ldd	r25, Y+8	; 0x08
     30e:	96 95       	lsr	r25
     310:	87 95       	ror	r24
     312:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//custom char
		lcd_define_char(3, customPtr);
     316:	29 81       	ldd	r18, Y+1	; 0x01
     318:	3a 81       	ldd	r19, Y+2	; 0x02
     31a:	83 e0       	ldi	r24, 0x03	; 3
     31c:	b9 01       	movw	r22, r18
     31e:	0e 94 71 02 	call	0x4e2	; 0x4e2 <lcd_define_char>
		lcd_custom(3);
     322:	83 e0       	ldi	r24, 0x03	; 3
     324:	0e 94 9e 02 	call	0x53c	; 0x53c <lcd_custom>
		delay_ms(delay);
     328:	8f 81       	ldd	r24, Y+7	; 0x07
     32a:	98 85       	ldd	r25, Y+8	; 0x08
     32c:	0e 94 41 00 	call	0x82	; 0x82 <delay_ms>
		//clears the display
		lcd_clear();
     330:	0e 94 23 02 	call	0x446	; 0x446 <lcd_clear>
     334:	6d cf       	rjmp	.-294    	; 0x210 <main+0xe0>

00000336 <lcd_init>:
*	Parameters: void
*	Returns: void
*	
*******************************************************************/
void lcd_init(void)
{
     336:	df 93       	push	r29
     338:	cf 93       	push	r28
     33a:	cd b7       	in	r28, 0x3d	; 61
     33c:	de b7       	in	r29, 0x3e	; 62
	UBRRH = 0;
     33e:	e0 e4       	ldi	r30, 0x40	; 64
     340:	f0 e0       	ldi	r31, 0x00	; 0
     342:	10 82       	st	Z, r1
	//UBRRL = 51;
	UBRRL = UBRR_VAL; 					// 9600 baud
     344:	e9 e2       	ldi	r30, 0x29	; 41
     346:	f0 e0       	ldi	r31, 0x00	; 0
     348:	87 e6       	ldi	r24, 0x67	; 103
     34a:	80 83       	st	Z, r24
	UCSRB = (1<<TXEN)|(1<<RXEN);	// Enable Tx and Rx
     34c:	ea e2       	ldi	r30, 0x2A	; 42
     34e:	f0 e0       	ldi	r31, 0x00	; 0
     350:	88 e1       	ldi	r24, 0x18	; 24
     352:	80 83       	st	Z, r24
}
     354:	cf 91       	pop	r28
     356:	df 91       	pop	r29
     358:	08 95       	ret

0000035a <lcd_char>:
*	Parameters: char. The character that is to be printed
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
     35a:	df 93       	push	r29
     35c:	cf 93       	push	r28
     35e:	0f 92       	push	r0
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
     364:	89 83       	std	Y+1, r24	; 0x01
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     366:	eb e2       	ldi	r30, 0x2B	; 43
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	80 81       	ld	r24, Z
     36c:	88 2f       	mov	r24, r24
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	80 72       	andi	r24, 0x20	; 32
     372:	90 70       	andi	r25, 0x00	; 0
     374:	00 97       	sbiw	r24, 0x00	; 0
     376:	b9 f3       	breq	.-18     	; 0x366 <lcd_char+0xc>
		UDR = x;					// Send char
     378:	ec e2       	ldi	r30, 0x2C	; 44
     37a:	f0 e0       	ldi	r31, 0x00	; 0
     37c:	89 81       	ldd	r24, Y+1	; 0x01
     37e:	80 83       	st	Z, r24
}
     380:	0f 90       	pop	r0
     382:	cf 91       	pop	r28
     384:	df 91       	pop	r29
     386:	08 95       	ret

00000388 <lcd_string>:
*		string
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
     388:	df 93       	push	r29
     38a:	cf 93       	push	r28
     38c:	00 d0       	rcall	.+0      	; 0x38e <lcd_string+0x6>
     38e:	00 d0       	rcall	.+0      	; 0x390 <lcd_string+0x8>
     390:	cd b7       	in	r28, 0x3d	; 61
     392:	de b7       	in	r29, 0x3e	; 62
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	8b 83       	std	Y+3, r24	; 0x03
	for(int i=0; c[i] != 0; i++)
     398:	1a 82       	std	Y+2, r1	; 0x02
     39a:	19 82       	std	Y+1, r1	; 0x01
     39c:	0f c0       	rjmp	.+30     	; 0x3bc <lcd_string+0x34>
	{
		lcd_char(c[i]);
     39e:	29 81       	ldd	r18, Y+1	; 0x01
     3a0:	3a 81       	ldd	r19, Y+2	; 0x02
     3a2:	8b 81       	ldd	r24, Y+3	; 0x03
     3a4:	9c 81       	ldd	r25, Y+4	; 0x04
     3a6:	fc 01       	movw	r30, r24
     3a8:	e2 0f       	add	r30, r18
     3aa:	f3 1f       	adc	r31, r19
     3ac:	80 81       	ld	r24, Z
     3ae:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
	for(int i=0; c[i] != 0; i++)
     3b2:	89 81       	ldd	r24, Y+1	; 0x01
     3b4:	9a 81       	ldd	r25, Y+2	; 0x02
     3b6:	01 96       	adiw	r24, 0x01	; 1
     3b8:	9a 83       	std	Y+2, r25	; 0x02
     3ba:	89 83       	std	Y+1, r24	; 0x01
     3bc:	29 81       	ldd	r18, Y+1	; 0x01
     3be:	3a 81       	ldd	r19, Y+2	; 0x02
     3c0:	8b 81       	ldd	r24, Y+3	; 0x03
     3c2:	9c 81       	ldd	r25, Y+4	; 0x04
     3c4:	fc 01       	movw	r30, r24
     3c6:	e2 0f       	add	r30, r18
     3c8:	f3 1f       	adc	r31, r19
     3ca:	80 81       	ld	r24, Z
     3cc:	88 23       	and	r24, r24
     3ce:	39 f7       	brne	.-50     	; 0x39e <lcd_string+0x16>
	{
		lcd_char(c[i]);
	}
	lcd_char(CR);
     3d0:	8d e0       	ldi	r24, 0x0D	; 13
     3d2:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
	lcd_char(LF);
     3d6:	8a e0       	ldi	r24, 0x0A	; 10
     3d8:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     3dc:	0f 90       	pop	r0
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
     3e2:	0f 90       	pop	r0
     3e4:	cf 91       	pop	r28
     3e6:	df 91       	pop	r29
     3e8:	08 95       	ret

000003ea <lcd_gotoxy>:
*		(0,0) is the upper left, 0 <= x or y <= 15
*	Returns: void
*	
*******************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
     3ea:	df 93       	push	r29
     3ec:	cf 93       	push	r28
     3ee:	00 d0       	rcall	.+0      	; 0x3f0 <lcd_gotoxy+0x6>
     3f0:	0f 92       	push	r0
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	8a 83       	std	Y+2, r24	; 0x02
     3f8:	6b 83       	std	Y+3, r22	; 0x03
	uint8_t output = 128; //cursor at line 0 position 0
     3fa:	80 e8       	ldi	r24, 0x80	; 128
     3fc:	89 83       	std	Y+1, r24	; 0x01
	//makes sure the x and y corridnates fit within the lcd screen
	if((x <= 1) && (y <= 15))
     3fe:	8a 81       	ldd	r24, Y+2	; 0x02
     400:	82 30       	cpi	r24, 0x02	; 2
     402:	c0 f4       	brcc	.+48     	; 0x434 <lcd_gotoxy+0x4a>
     404:	8b 81       	ldd	r24, Y+3	; 0x03
     406:	80 31       	cpi	r24, 0x10	; 16
     408:	a8 f4       	brcc	.+42     	; 0x434 <lcd_gotoxy+0x4a>
	{
		//0 line is 128 + y for each position
		//1 line is 148 + y for each position
		output += (x*20) + y;
     40a:	8a 81       	ldd	r24, Y+2	; 0x02
     40c:	88 2f       	mov	r24, r24
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	9c 01       	movw	r18, r24
     412:	22 0f       	add	r18, r18
     414:	33 1f       	adc	r19, r19
     416:	22 0f       	add	r18, r18
     418:	33 1f       	adc	r19, r19
     41a:	c9 01       	movw	r24, r18
     41c:	88 0f       	add	r24, r24
     41e:	99 1f       	adc	r25, r25
     420:	88 0f       	add	r24, r24
     422:	99 1f       	adc	r25, r25
     424:	82 0f       	add	r24, r18
     426:	93 1f       	adc	r25, r19
     428:	98 2f       	mov	r25, r24
     42a:	8b 81       	ldd	r24, Y+3	; 0x03
     42c:	98 0f       	add	r25, r24
     42e:	89 81       	ldd	r24, Y+1	; 0x01
     430:	89 0f       	add	r24, r25
     432:	89 83       	std	Y+1, r24	; 0x01
	}
	lcd_char(output);
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	cf 91       	pop	r28
     442:	df 91       	pop	r29
     444:	08 95       	ret

00000446 <lcd_clear>:
*	Parameters: void
*	Returns: void
*	
*******************************************************************/
void lcd_clear(void)
{
     446:	df 93       	push	r29
     448:	cf 93       	push	r28
     44a:	cd b7       	in	r28, 0x3d	; 61
     44c:	de b7       	in	r29, 0x3e	; 62
	lcd_ff();
     44e:	0e 94 2c 02 	call	0x458	; 0x458 <lcd_ff>
}
     452:	cf 91       	pop	r28
     454:	df 91       	pop	r29
     456:	08 95       	ret

00000458 <lcd_ff>:
*	Parameters: void
*	Returns: void
*	
*******************************************************************/
void lcd_ff(void)
{
     458:	df 93       	push	r29
     45a:	cf 93       	push	r28
     45c:	cd b7       	in	r28, 0x3d	; 61
     45e:	de b7       	in	r29, 0x3e	; 62
	lcd_char(FF);
     460:	8c e0       	ldi	r24, 0x0C	; 12
     462:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     466:	cf 91       	pop	r28
     468:	df 91       	pop	r29
     46a:	08 95       	ret

0000046c <lcd_left>:
*	Parameters: void
*	Returns: void
*	
*******************************************************************/
void lcd_left(void)
{
     46c:	df 93       	push	r29
     46e:	cf 93       	push	r28
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
	lcd_char(BS);
     474:	88 e0       	ldi	r24, 0x08	; 8
     476:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     47a:	cf 91       	pop	r28
     47c:	df 91       	pop	r29
     47e:	08 95       	ret

00000480 <lcd_backlight>:
*	Parameters: char. Either "ON" or "OFF" #define 1 and 0
*	Returns: void
*	
*******************************************************************/
void lcd_backlight(char state)
{
     480:	df 93       	push	r29
     482:	cf 93       	push	r28
     484:	00 d0       	rcall	.+0      	; 0x486 <lcd_backlight+0x6>
     486:	cd b7       	in	r28, 0x3d	; 61
     488:	de b7       	in	r29, 0x3e	; 62
     48a:	8a 83       	std	Y+2, r24	; 0x02
	// sets the light to ON as default
	uint8_t backlight = LIGHTON;
     48c:	81 e1       	ldi	r24, 0x11	; 17
     48e:	89 83       	std	Y+1, r24	; 0x01
	if ( state == '0' )
     490:	8a 81       	ldd	r24, Y+2	; 0x02
     492:	80 33       	cpi	r24, 0x30	; 48
     494:	11 f4       	brne	.+4      	; 0x49a <lcd_backlight+0x1a>
	{
		// sets the light to off
		backlight = LIGHTOFF;
     496:	82 e1       	ldi	r24, 0x12	; 18
     498:	89 83       	std	Y+1, r24	; 0x01
	}
	lcd_char(backlight);
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     4a0:	0f 90       	pop	r0
     4a2:	0f 90       	pop	r0
     4a4:	cf 91       	pop	r28
     4a6:	df 91       	pop	r29
     4a8:	08 95       	ret

000004aa <lcd_switch>:
*	Parameters: char. Either "ON" or "OFF" #define 1 and 0
*	Returns: void
*	
*******************************************************************/
void lcd_switch(char state)
{
     4aa:	df 93       	push	r29
     4ac:	cf 93       	push	r28
     4ae:	00 d0       	rcall	.+0      	; 0x4b0 <lcd_switch+0x6>
     4b0:	cd b7       	in	r28, 0x3d	; 61
     4b2:	de b7       	in	r29, 0x3e	; 62
     4b4:	8a 83       	std	Y+2, r24	; 0x02
	// sets the power to OFF as default
	uint8_t power = DISPLAYOFF;
     4b6:	85 e1       	ldi	r24, 0x15	; 21
     4b8:	89 83       	std	Y+1, r24	; 0x01
	if ( state == '1' )
     4ba:	8a 81       	ldd	r24, Y+2	; 0x02
     4bc:	81 33       	cpi	r24, 0x31	; 49
     4be:	31 f4       	brne	.+12     	; 0x4cc <lcd_switch+0x22>
	{
		//turns the back light on then turns on the display
		lcd_backlight(ON);
     4c0:	81 e3       	ldi	r24, 0x31	; 49
     4c2:	0e 94 40 02 	call	0x480	; 0x480 <lcd_backlight>
		// sets the display on cursor on and character blink
		power = DISPLAYON;
     4c6:	88 e1       	ldi	r24, 0x18	; 24
     4c8:	89 83       	std	Y+1, r24	; 0x01
     4ca:	03 c0       	rjmp	.+6      	; 0x4d2 <lcd_switch+0x28>
	}
	else
	{
		//When the Display goes off the back light will also go off.
		lcd_backlight(OFF);
     4cc:	80 e3       	ldi	r24, 0x30	; 48
     4ce:	0e 94 40 02 	call	0x480	; 0x480 <lcd_backlight>
	}
	lcd_char(power);
     4d2:	89 81       	ldd	r24, Y+1	; 0x01
     4d4:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	cf 91       	pop	r28
     4de:	df 91       	pop	r29
     4e0:	08 95       	ret

000004e2 <lcd_define_char>:
*		spot,char pointer to custom character
*	Returns: void
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
     4e2:	df 93       	push	r29
     4e4:	cf 93       	push	r28
     4e6:	00 d0       	rcall	.+0      	; 0x4e8 <lcd_define_char+0x6>
     4e8:	00 d0       	rcall	.+0      	; 0x4ea <lcd_define_char+0x8>
     4ea:	0f 92       	push	r0
     4ec:	cd b7       	in	r28, 0x3d	; 61
     4ee:	de b7       	in	r29, 0x3e	; 62
     4f0:	8b 83       	std	Y+3, r24	; 0x03
     4f2:	7d 83       	std	Y+5, r23	; 0x05
     4f4:	6c 83       	std	Y+4, r22	; 0x04
	lcd_char(num+247);
     4f6:	8b 81       	ldd	r24, Y+3	; 0x03
     4f8:	89 50       	subi	r24, 0x09	; 9
     4fa:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
	for(int i=0; i < 8; i++)
     4fe:	1a 82       	std	Y+2, r1	; 0x02
     500:	19 82       	std	Y+1, r1	; 0x01
     502:	0f c0       	rjmp	.+30     	; 0x522 <lcd_define_char+0x40>
	{
		lcd_char(data[i]);
     504:	29 81       	ldd	r18, Y+1	; 0x01
     506:	3a 81       	ldd	r19, Y+2	; 0x02
     508:	8c 81       	ldd	r24, Y+4	; 0x04
     50a:	9d 81       	ldd	r25, Y+5	; 0x05
     50c:	fc 01       	movw	r30, r24
     50e:	e2 0f       	add	r30, r18
     510:	f3 1f       	adc	r31, r19
     512:	80 81       	ld	r24, Z
     514:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
	for(int i=0; i < 8; i++)
     518:	89 81       	ldd	r24, Y+1	; 0x01
     51a:	9a 81       	ldd	r25, Y+2	; 0x02
     51c:	01 96       	adiw	r24, 0x01	; 1
     51e:	9a 83       	std	Y+2, r25	; 0x02
     520:	89 83       	std	Y+1, r24	; 0x01
     522:	89 81       	ldd	r24, Y+1	; 0x01
     524:	9a 81       	ldd	r25, Y+2	; 0x02
     526:	88 30       	cpi	r24, 0x08	; 8
     528:	91 05       	cpc	r25, r1
     52a:	64 f3       	brlt	.-40     	; 0x504 <lcd_define_char+0x22>
	{
		lcd_char(data[i]);
	}
}
     52c:	0f 90       	pop	r0
     52e:	0f 90       	pop	r0
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	cf 91       	pop	r28
     538:	df 91       	pop	r29
     53a:	08 95       	ret

0000053c <lcd_custom>:
*	Parameters: uint8_t. 0 to 7 custom character spot
*	Returns: void
*	
*******************************************************************/
void lcd_custom(uint8_t num)
{
     53c:	df 93       	push	r29
     53e:	cf 93       	push	r28
     540:	0f 92       	push	r0
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	89 83       	std	Y+1, r24	; 0x01
	if(num <= 8)
     548:	89 81       	ldd	r24, Y+1	; 0x01
     54a:	89 30       	cpi	r24, 0x09	; 9
     54c:	20 f4       	brcc	.+8      	; 0x556 <lcd_custom+0x1a>
	//num works becasue the custom chars codes are 0-7
	//and will be stored in the same style
	lcd_char(num-1);
     54e:	89 81       	ldd	r24, Y+1	; 0x01
     550:	81 50       	subi	r24, 0x01	; 1
     552:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_char>
}
     556:	0f 90       	pop	r0
     558:	cf 91       	pop	r28
     55a:	df 91       	pop	r29
     55c:	08 95       	ret

0000055e <__fixunssfsi>:
     55e:	ef 92       	push	r14
     560:	ff 92       	push	r15
     562:	0f 93       	push	r16
     564:	1f 93       	push	r17
     566:	7b 01       	movw	r14, r22
     568:	8c 01       	movw	r16, r24
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	40 e0       	ldi	r20, 0x00	; 0
     570:	5f e4       	ldi	r21, 0x4F	; 79
     572:	0e 94 7f 05 	call	0xafe	; 0xafe <__gesf2>
     576:	88 23       	and	r24, r24
     578:	8c f0       	brlt	.+34     	; 0x59c <__fixunssfsi+0x3e>
     57a:	c8 01       	movw	r24, r16
     57c:	b7 01       	movw	r22, r14
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	40 e0       	ldi	r20, 0x00	; 0
     584:	5f e4       	ldi	r21, 0x4F	; 79
     586:	0e 94 27 04 	call	0x84e	; 0x84e <__subsf3>
     58a:	0e 94 af 05 	call	0xb5e	; 0xb5e <__fixsfsi>
     58e:	9b 01       	movw	r18, r22
     590:	ac 01       	movw	r20, r24
     592:	20 50       	subi	r18, 0x00	; 0
     594:	30 40       	sbci	r19, 0x00	; 0
     596:	40 40       	sbci	r20, 0x00	; 0
     598:	50 48       	sbci	r21, 0x80	; 128
     59a:	06 c0       	rjmp	.+12     	; 0x5a8 <__fixunssfsi+0x4a>
     59c:	c8 01       	movw	r24, r16
     59e:	b7 01       	movw	r22, r14
     5a0:	0e 94 af 05 	call	0xb5e	; 0xb5e <__fixsfsi>
     5a4:	9b 01       	movw	r18, r22
     5a6:	ac 01       	movw	r20, r24
     5a8:	b9 01       	movw	r22, r18
     5aa:	ca 01       	movw	r24, r20
     5ac:	1f 91       	pop	r17
     5ae:	0f 91       	pop	r16
     5b0:	ff 90       	pop	r15
     5b2:	ef 90       	pop	r14
     5b4:	08 95       	ret

000005b6 <_fpadd_parts>:
     5b6:	a0 e0       	ldi	r26, 0x00	; 0
     5b8:	b0 e0       	ldi	r27, 0x00	; 0
     5ba:	e1 ee       	ldi	r30, 0xE1	; 225
     5bc:	f2 e0       	ldi	r31, 0x02	; 2
     5be:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__>
     5c2:	dc 01       	movw	r26, r24
     5c4:	2b 01       	movw	r4, r22
     5c6:	fa 01       	movw	r30, r20
     5c8:	9c 91       	ld	r25, X
     5ca:	92 30       	cpi	r25, 0x02	; 2
     5cc:	08 f4       	brcc	.+2      	; 0x5d0 <_fpadd_parts+0x1a>
     5ce:	39 c1       	rjmp	.+626    	; 0x842 <_fpadd_parts+0x28c>
     5d0:	eb 01       	movw	r28, r22
     5d2:	88 81       	ld	r24, Y
     5d4:	82 30       	cpi	r24, 0x02	; 2
     5d6:	08 f4       	brcc	.+2      	; 0x5da <_fpadd_parts+0x24>
     5d8:	33 c1       	rjmp	.+614    	; 0x840 <_fpadd_parts+0x28a>
     5da:	94 30       	cpi	r25, 0x04	; 4
     5dc:	69 f4       	brne	.+26     	; 0x5f8 <_fpadd_parts+0x42>
     5de:	84 30       	cpi	r24, 0x04	; 4
     5e0:	09 f0       	breq	.+2      	; 0x5e4 <_fpadd_parts+0x2e>
     5e2:	2f c1       	rjmp	.+606    	; 0x842 <_fpadd_parts+0x28c>
     5e4:	11 96       	adiw	r26, 0x01	; 1
     5e6:	9c 91       	ld	r25, X
     5e8:	11 97       	sbiw	r26, 0x01	; 1
     5ea:	89 81       	ldd	r24, Y+1	; 0x01
     5ec:	98 17       	cp	r25, r24
     5ee:	09 f4       	brne	.+2      	; 0x5f2 <_fpadd_parts+0x3c>
     5f0:	28 c1       	rjmp	.+592    	; 0x842 <_fpadd_parts+0x28c>
     5f2:	a9 e7       	ldi	r26, 0x79	; 121
     5f4:	b0 e0       	ldi	r27, 0x00	; 0
     5f6:	25 c1       	rjmp	.+586    	; 0x842 <_fpadd_parts+0x28c>
     5f8:	84 30       	cpi	r24, 0x04	; 4
     5fa:	09 f4       	brne	.+2      	; 0x5fe <_fpadd_parts+0x48>
     5fc:	21 c1       	rjmp	.+578    	; 0x840 <_fpadd_parts+0x28a>
     5fe:	82 30       	cpi	r24, 0x02	; 2
     600:	a9 f4       	brne	.+42     	; 0x62c <_fpadd_parts+0x76>
     602:	92 30       	cpi	r25, 0x02	; 2
     604:	09 f0       	breq	.+2      	; 0x608 <_fpadd_parts+0x52>
     606:	1d c1       	rjmp	.+570    	; 0x842 <_fpadd_parts+0x28c>
     608:	9a 01       	movw	r18, r20
     60a:	ad 01       	movw	r20, r26
     60c:	88 e0       	ldi	r24, 0x08	; 8
     60e:	ea 01       	movw	r28, r20
     610:	09 90       	ld	r0, Y+
     612:	ae 01       	movw	r20, r28
     614:	e9 01       	movw	r28, r18
     616:	09 92       	st	Y+, r0
     618:	9e 01       	movw	r18, r28
     61a:	81 50       	subi	r24, 0x01	; 1
     61c:	c1 f7       	brne	.-16     	; 0x60e <_fpadd_parts+0x58>
     61e:	e2 01       	movw	r28, r4
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	11 96       	adiw	r26, 0x01	; 1
     624:	9c 91       	ld	r25, X
     626:	89 23       	and	r24, r25
     628:	81 83       	std	Z+1, r24	; 0x01
     62a:	08 c1       	rjmp	.+528    	; 0x83c <_fpadd_parts+0x286>
     62c:	92 30       	cpi	r25, 0x02	; 2
     62e:	09 f4       	brne	.+2      	; 0x632 <_fpadd_parts+0x7c>
     630:	07 c1       	rjmp	.+526    	; 0x840 <_fpadd_parts+0x28a>
     632:	12 96       	adiw	r26, 0x02	; 2
     634:	2d 90       	ld	r2, X+
     636:	3c 90       	ld	r3, X
     638:	13 97       	sbiw	r26, 0x03	; 3
     63a:	eb 01       	movw	r28, r22
     63c:	8a 81       	ldd	r24, Y+2	; 0x02
     63e:	9b 81       	ldd	r25, Y+3	; 0x03
     640:	14 96       	adiw	r26, 0x04	; 4
     642:	ad 90       	ld	r10, X+
     644:	bd 90       	ld	r11, X+
     646:	cd 90       	ld	r12, X+
     648:	dc 90       	ld	r13, X
     64a:	17 97       	sbiw	r26, 0x07	; 7
     64c:	ec 80       	ldd	r14, Y+4	; 0x04
     64e:	fd 80       	ldd	r15, Y+5	; 0x05
     650:	0e 81       	ldd	r16, Y+6	; 0x06
     652:	1f 81       	ldd	r17, Y+7	; 0x07
     654:	91 01       	movw	r18, r2
     656:	28 1b       	sub	r18, r24
     658:	39 0b       	sbc	r19, r25
     65a:	b9 01       	movw	r22, r18
     65c:	37 ff       	sbrs	r19, 7
     65e:	04 c0       	rjmp	.+8      	; 0x668 <_fpadd_parts+0xb2>
     660:	66 27       	eor	r22, r22
     662:	77 27       	eor	r23, r23
     664:	62 1b       	sub	r22, r18
     666:	73 0b       	sbc	r23, r19
     668:	60 32       	cpi	r22, 0x20	; 32
     66a:	71 05       	cpc	r23, r1
     66c:	0c f0       	brlt	.+2      	; 0x670 <_fpadd_parts+0xba>
     66e:	61 c0       	rjmp	.+194    	; 0x732 <_fpadd_parts+0x17c>
     670:	12 16       	cp	r1, r18
     672:	13 06       	cpc	r1, r19
     674:	6c f5       	brge	.+90     	; 0x6d0 <_fpadd_parts+0x11a>
     676:	37 01       	movw	r6, r14
     678:	48 01       	movw	r8, r16
     67a:	06 2e       	mov	r0, r22
     67c:	04 c0       	rjmp	.+8      	; 0x686 <_fpadd_parts+0xd0>
     67e:	96 94       	lsr	r9
     680:	87 94       	ror	r8
     682:	77 94       	ror	r7
     684:	67 94       	ror	r6
     686:	0a 94       	dec	r0
     688:	d2 f7       	brpl	.-12     	; 0x67e <_fpadd_parts+0xc8>
     68a:	21 e0       	ldi	r18, 0x01	; 1
     68c:	30 e0       	ldi	r19, 0x00	; 0
     68e:	40 e0       	ldi	r20, 0x00	; 0
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	04 c0       	rjmp	.+8      	; 0x69c <_fpadd_parts+0xe6>
     694:	22 0f       	add	r18, r18
     696:	33 1f       	adc	r19, r19
     698:	44 1f       	adc	r20, r20
     69a:	55 1f       	adc	r21, r21
     69c:	6a 95       	dec	r22
     69e:	d2 f7       	brpl	.-12     	; 0x694 <_fpadd_parts+0xde>
     6a0:	21 50       	subi	r18, 0x01	; 1
     6a2:	30 40       	sbci	r19, 0x00	; 0
     6a4:	40 40       	sbci	r20, 0x00	; 0
     6a6:	50 40       	sbci	r21, 0x00	; 0
     6a8:	2e 21       	and	r18, r14
     6aa:	3f 21       	and	r19, r15
     6ac:	40 23       	and	r20, r16
     6ae:	51 23       	and	r21, r17
     6b0:	21 15       	cp	r18, r1
     6b2:	31 05       	cpc	r19, r1
     6b4:	41 05       	cpc	r20, r1
     6b6:	51 05       	cpc	r21, r1
     6b8:	21 f0       	breq	.+8      	; 0x6c2 <_fpadd_parts+0x10c>
     6ba:	21 e0       	ldi	r18, 0x01	; 1
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	40 e0       	ldi	r20, 0x00	; 0
     6c0:	50 e0       	ldi	r21, 0x00	; 0
     6c2:	79 01       	movw	r14, r18
     6c4:	8a 01       	movw	r16, r20
     6c6:	e6 28       	or	r14, r6
     6c8:	f7 28       	or	r15, r7
     6ca:	08 29       	or	r16, r8
     6cc:	19 29       	or	r17, r9
     6ce:	3c c0       	rjmp	.+120    	; 0x748 <_fpadd_parts+0x192>
     6d0:	23 2b       	or	r18, r19
     6d2:	d1 f1       	breq	.+116    	; 0x748 <_fpadd_parts+0x192>
     6d4:	26 0e       	add	r2, r22
     6d6:	37 1e       	adc	r3, r23
     6d8:	35 01       	movw	r6, r10
     6da:	46 01       	movw	r8, r12
     6dc:	06 2e       	mov	r0, r22
     6de:	04 c0       	rjmp	.+8      	; 0x6e8 <_fpadd_parts+0x132>
     6e0:	96 94       	lsr	r9
     6e2:	87 94       	ror	r8
     6e4:	77 94       	ror	r7
     6e6:	67 94       	ror	r6
     6e8:	0a 94       	dec	r0
     6ea:	d2 f7       	brpl	.-12     	; 0x6e0 <_fpadd_parts+0x12a>
     6ec:	21 e0       	ldi	r18, 0x01	; 1
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	40 e0       	ldi	r20, 0x00	; 0
     6f2:	50 e0       	ldi	r21, 0x00	; 0
     6f4:	04 c0       	rjmp	.+8      	; 0x6fe <_fpadd_parts+0x148>
     6f6:	22 0f       	add	r18, r18
     6f8:	33 1f       	adc	r19, r19
     6fa:	44 1f       	adc	r20, r20
     6fc:	55 1f       	adc	r21, r21
     6fe:	6a 95       	dec	r22
     700:	d2 f7       	brpl	.-12     	; 0x6f6 <_fpadd_parts+0x140>
     702:	21 50       	subi	r18, 0x01	; 1
     704:	30 40       	sbci	r19, 0x00	; 0
     706:	40 40       	sbci	r20, 0x00	; 0
     708:	50 40       	sbci	r21, 0x00	; 0
     70a:	2a 21       	and	r18, r10
     70c:	3b 21       	and	r19, r11
     70e:	4c 21       	and	r20, r12
     710:	5d 21       	and	r21, r13
     712:	21 15       	cp	r18, r1
     714:	31 05       	cpc	r19, r1
     716:	41 05       	cpc	r20, r1
     718:	51 05       	cpc	r21, r1
     71a:	21 f0       	breq	.+8      	; 0x724 <_fpadd_parts+0x16e>
     71c:	21 e0       	ldi	r18, 0x01	; 1
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	50 e0       	ldi	r21, 0x00	; 0
     724:	59 01       	movw	r10, r18
     726:	6a 01       	movw	r12, r20
     728:	a6 28       	or	r10, r6
     72a:	b7 28       	or	r11, r7
     72c:	c8 28       	or	r12, r8
     72e:	d9 28       	or	r13, r9
     730:	0b c0       	rjmp	.+22     	; 0x748 <_fpadd_parts+0x192>
     732:	82 15       	cp	r24, r2
     734:	93 05       	cpc	r25, r3
     736:	2c f0       	brlt	.+10     	; 0x742 <_fpadd_parts+0x18c>
     738:	1c 01       	movw	r2, r24
     73a:	aa 24       	eor	r10, r10
     73c:	bb 24       	eor	r11, r11
     73e:	65 01       	movw	r12, r10
     740:	03 c0       	rjmp	.+6      	; 0x748 <_fpadd_parts+0x192>
     742:	ee 24       	eor	r14, r14
     744:	ff 24       	eor	r15, r15
     746:	87 01       	movw	r16, r14
     748:	11 96       	adiw	r26, 0x01	; 1
     74a:	9c 91       	ld	r25, X
     74c:	d2 01       	movw	r26, r4
     74e:	11 96       	adiw	r26, 0x01	; 1
     750:	8c 91       	ld	r24, X
     752:	98 17       	cp	r25, r24
     754:	09 f4       	brne	.+2      	; 0x758 <_fpadd_parts+0x1a2>
     756:	45 c0       	rjmp	.+138    	; 0x7e2 <_fpadd_parts+0x22c>
     758:	99 23       	and	r25, r25
     75a:	39 f0       	breq	.+14     	; 0x76a <_fpadd_parts+0x1b4>
     75c:	a8 01       	movw	r20, r16
     75e:	97 01       	movw	r18, r14
     760:	2a 19       	sub	r18, r10
     762:	3b 09       	sbc	r19, r11
     764:	4c 09       	sbc	r20, r12
     766:	5d 09       	sbc	r21, r13
     768:	06 c0       	rjmp	.+12     	; 0x776 <_fpadd_parts+0x1c0>
     76a:	a6 01       	movw	r20, r12
     76c:	95 01       	movw	r18, r10
     76e:	2e 19       	sub	r18, r14
     770:	3f 09       	sbc	r19, r15
     772:	40 0b       	sbc	r20, r16
     774:	51 0b       	sbc	r21, r17
     776:	57 fd       	sbrc	r21, 7
     778:	08 c0       	rjmp	.+16     	; 0x78a <_fpadd_parts+0x1d4>
     77a:	11 82       	std	Z+1, r1	; 0x01
     77c:	33 82       	std	Z+3, r3	; 0x03
     77e:	22 82       	std	Z+2, r2	; 0x02
     780:	24 83       	std	Z+4, r18	; 0x04
     782:	35 83       	std	Z+5, r19	; 0x05
     784:	46 83       	std	Z+6, r20	; 0x06
     786:	57 83       	std	Z+7, r21	; 0x07
     788:	1d c0       	rjmp	.+58     	; 0x7c4 <_fpadd_parts+0x20e>
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	81 83       	std	Z+1, r24	; 0x01
     78e:	33 82       	std	Z+3, r3	; 0x03
     790:	22 82       	std	Z+2, r2	; 0x02
     792:	88 27       	eor	r24, r24
     794:	99 27       	eor	r25, r25
     796:	dc 01       	movw	r26, r24
     798:	82 1b       	sub	r24, r18
     79a:	93 0b       	sbc	r25, r19
     79c:	a4 0b       	sbc	r26, r20
     79e:	b5 0b       	sbc	r27, r21
     7a0:	84 83       	std	Z+4, r24	; 0x04
     7a2:	95 83       	std	Z+5, r25	; 0x05
     7a4:	a6 83       	std	Z+6, r26	; 0x06
     7a6:	b7 83       	std	Z+7, r27	; 0x07
     7a8:	0d c0       	rjmp	.+26     	; 0x7c4 <_fpadd_parts+0x20e>
     7aa:	22 0f       	add	r18, r18
     7ac:	33 1f       	adc	r19, r19
     7ae:	44 1f       	adc	r20, r20
     7b0:	55 1f       	adc	r21, r21
     7b2:	24 83       	std	Z+4, r18	; 0x04
     7b4:	35 83       	std	Z+5, r19	; 0x05
     7b6:	46 83       	std	Z+6, r20	; 0x06
     7b8:	57 83       	std	Z+7, r21	; 0x07
     7ba:	82 81       	ldd	r24, Z+2	; 0x02
     7bc:	93 81       	ldd	r25, Z+3	; 0x03
     7be:	01 97       	sbiw	r24, 0x01	; 1
     7c0:	93 83       	std	Z+3, r25	; 0x03
     7c2:	82 83       	std	Z+2, r24	; 0x02
     7c4:	24 81       	ldd	r18, Z+4	; 0x04
     7c6:	35 81       	ldd	r19, Z+5	; 0x05
     7c8:	46 81       	ldd	r20, Z+6	; 0x06
     7ca:	57 81       	ldd	r21, Z+7	; 0x07
     7cc:	da 01       	movw	r26, r20
     7ce:	c9 01       	movw	r24, r18
     7d0:	01 97       	sbiw	r24, 0x01	; 1
     7d2:	a1 09       	sbc	r26, r1
     7d4:	b1 09       	sbc	r27, r1
     7d6:	8f 5f       	subi	r24, 0xFF	; 255
     7d8:	9f 4f       	sbci	r25, 0xFF	; 255
     7da:	af 4f       	sbci	r26, 0xFF	; 255
     7dc:	bf 43       	sbci	r27, 0x3F	; 63
     7de:	28 f3       	brcs	.-54     	; 0x7aa <_fpadd_parts+0x1f4>
     7e0:	0b c0       	rjmp	.+22     	; 0x7f8 <_fpadd_parts+0x242>
     7e2:	91 83       	std	Z+1, r25	; 0x01
     7e4:	33 82       	std	Z+3, r3	; 0x03
     7e6:	22 82       	std	Z+2, r2	; 0x02
     7e8:	ea 0c       	add	r14, r10
     7ea:	fb 1c       	adc	r15, r11
     7ec:	0c 1d       	adc	r16, r12
     7ee:	1d 1d       	adc	r17, r13
     7f0:	e4 82       	std	Z+4, r14	; 0x04
     7f2:	f5 82       	std	Z+5, r15	; 0x05
     7f4:	06 83       	std	Z+6, r16	; 0x06
     7f6:	17 83       	std	Z+7, r17	; 0x07
     7f8:	83 e0       	ldi	r24, 0x03	; 3
     7fa:	80 83       	st	Z, r24
     7fc:	24 81       	ldd	r18, Z+4	; 0x04
     7fe:	35 81       	ldd	r19, Z+5	; 0x05
     800:	46 81       	ldd	r20, Z+6	; 0x06
     802:	57 81       	ldd	r21, Z+7	; 0x07
     804:	57 ff       	sbrs	r21, 7
     806:	1a c0       	rjmp	.+52     	; 0x83c <_fpadd_parts+0x286>
     808:	c9 01       	movw	r24, r18
     80a:	aa 27       	eor	r26, r26
     80c:	97 fd       	sbrc	r25, 7
     80e:	a0 95       	com	r26
     810:	ba 2f       	mov	r27, r26
     812:	81 70       	andi	r24, 0x01	; 1
     814:	90 70       	andi	r25, 0x00	; 0
     816:	a0 70       	andi	r26, 0x00	; 0
     818:	b0 70       	andi	r27, 0x00	; 0
     81a:	56 95       	lsr	r21
     81c:	47 95       	ror	r20
     81e:	37 95       	ror	r19
     820:	27 95       	ror	r18
     822:	82 2b       	or	r24, r18
     824:	93 2b       	or	r25, r19
     826:	a4 2b       	or	r26, r20
     828:	b5 2b       	or	r27, r21
     82a:	84 83       	std	Z+4, r24	; 0x04
     82c:	95 83       	std	Z+5, r25	; 0x05
     82e:	a6 83       	std	Z+6, r26	; 0x06
     830:	b7 83       	std	Z+7, r27	; 0x07
     832:	82 81       	ldd	r24, Z+2	; 0x02
     834:	93 81       	ldd	r25, Z+3	; 0x03
     836:	01 96       	adiw	r24, 0x01	; 1
     838:	93 83       	std	Z+3, r25	; 0x03
     83a:	82 83       	std	Z+2, r24	; 0x02
     83c:	df 01       	movw	r26, r30
     83e:	01 c0       	rjmp	.+2      	; 0x842 <_fpadd_parts+0x28c>
     840:	d2 01       	movw	r26, r4
     842:	cd 01       	movw	r24, r26
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	e2 e1       	ldi	r30, 0x12	; 18
     84a:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__>

0000084e <__subsf3>:
     84e:	a0 e2       	ldi	r26, 0x20	; 32
     850:	b0 e0       	ldi	r27, 0x00	; 0
     852:	ed e2       	ldi	r30, 0x2D	; 45
     854:	f4 e0       	ldi	r31, 0x04	; 4
     856:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__prologue_saves__+0x18>
     85a:	69 83       	std	Y+1, r22	; 0x01
     85c:	7a 83       	std	Y+2, r23	; 0x02
     85e:	8b 83       	std	Y+3, r24	; 0x03
     860:	9c 83       	std	Y+4, r25	; 0x04
     862:	2d 83       	std	Y+5, r18	; 0x05
     864:	3e 83       	std	Y+6, r19	; 0x06
     866:	4f 83       	std	Y+7, r20	; 0x07
     868:	58 87       	std	Y+8, r21	; 0x08
     86a:	e9 e0       	ldi	r30, 0x09	; 9
     86c:	ee 2e       	mov	r14, r30
     86e:	f1 2c       	mov	r15, r1
     870:	ec 0e       	add	r14, r28
     872:	fd 1e       	adc	r15, r29
     874:	ce 01       	movw	r24, r28
     876:	01 96       	adiw	r24, 0x01	; 1
     878:	b7 01       	movw	r22, r14
     87a:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     87e:	8e 01       	movw	r16, r28
     880:	0f 5e       	subi	r16, 0xEF	; 239
     882:	1f 4f       	sbci	r17, 0xFF	; 255
     884:	ce 01       	movw	r24, r28
     886:	05 96       	adiw	r24, 0x05	; 5
     888:	b8 01       	movw	r22, r16
     88a:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     88e:	8a 89       	ldd	r24, Y+18	; 0x12
     890:	91 e0       	ldi	r25, 0x01	; 1
     892:	89 27       	eor	r24, r25
     894:	8a 8b       	std	Y+18, r24	; 0x12
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	ae 01       	movw	r20, r28
     89c:	47 5e       	subi	r20, 0xE7	; 231
     89e:	5f 4f       	sbci	r21, 0xFF	; 255
     8a0:	0e 94 db 02 	call	0x5b6	; 0x5b6 <_fpadd_parts>
     8a4:	0e 94 cb 06 	call	0xd96	; 0xd96 <__pack_f>
     8a8:	a0 96       	adiw	r28, 0x20	; 32
     8aa:	e6 e0       	ldi	r30, 0x06	; 6
     8ac:	0c 94 99 08 	jmp	0x1132	; 0x1132 <__epilogue_restores__+0x18>

000008b0 <__addsf3>:
     8b0:	a0 e2       	ldi	r26, 0x20	; 32
     8b2:	b0 e0       	ldi	r27, 0x00	; 0
     8b4:	ee e5       	ldi	r30, 0x5E	; 94
     8b6:	f4 e0       	ldi	r31, 0x04	; 4
     8b8:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__prologue_saves__+0x18>
     8bc:	69 83       	std	Y+1, r22	; 0x01
     8be:	7a 83       	std	Y+2, r23	; 0x02
     8c0:	8b 83       	std	Y+3, r24	; 0x03
     8c2:	9c 83       	std	Y+4, r25	; 0x04
     8c4:	2d 83       	std	Y+5, r18	; 0x05
     8c6:	3e 83       	std	Y+6, r19	; 0x06
     8c8:	4f 83       	std	Y+7, r20	; 0x07
     8ca:	58 87       	std	Y+8, r21	; 0x08
     8cc:	f9 e0       	ldi	r31, 0x09	; 9
     8ce:	ef 2e       	mov	r14, r31
     8d0:	f1 2c       	mov	r15, r1
     8d2:	ec 0e       	add	r14, r28
     8d4:	fd 1e       	adc	r15, r29
     8d6:	ce 01       	movw	r24, r28
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	b7 01       	movw	r22, r14
     8dc:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     8e0:	8e 01       	movw	r16, r28
     8e2:	0f 5e       	subi	r16, 0xEF	; 239
     8e4:	1f 4f       	sbci	r17, 0xFF	; 255
     8e6:	ce 01       	movw	r24, r28
     8e8:	05 96       	adiw	r24, 0x05	; 5
     8ea:	b8 01       	movw	r22, r16
     8ec:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     8f0:	c7 01       	movw	r24, r14
     8f2:	b8 01       	movw	r22, r16
     8f4:	ae 01       	movw	r20, r28
     8f6:	47 5e       	subi	r20, 0xE7	; 231
     8f8:	5f 4f       	sbci	r21, 0xFF	; 255
     8fa:	0e 94 db 02 	call	0x5b6	; 0x5b6 <_fpadd_parts>
     8fe:	0e 94 cb 06 	call	0xd96	; 0xd96 <__pack_f>
     902:	a0 96       	adiw	r28, 0x20	; 32
     904:	e6 e0       	ldi	r30, 0x06	; 6
     906:	0c 94 99 08 	jmp	0x1132	; 0x1132 <__epilogue_restores__+0x18>

0000090a <__mulsf3>:
     90a:	a0 e2       	ldi	r26, 0x20	; 32
     90c:	b0 e0       	ldi	r27, 0x00	; 0
     90e:	eb e8       	ldi	r30, 0x8B	; 139
     910:	f4 e0       	ldi	r31, 0x04	; 4
     912:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__prologue_saves__>
     916:	69 83       	std	Y+1, r22	; 0x01
     918:	7a 83       	std	Y+2, r23	; 0x02
     91a:	8b 83       	std	Y+3, r24	; 0x03
     91c:	9c 83       	std	Y+4, r25	; 0x04
     91e:	2d 83       	std	Y+5, r18	; 0x05
     920:	3e 83       	std	Y+6, r19	; 0x06
     922:	4f 83       	std	Y+7, r20	; 0x07
     924:	58 87       	std	Y+8, r21	; 0x08
     926:	ce 01       	movw	r24, r28
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	be 01       	movw	r22, r28
     92c:	67 5f       	subi	r22, 0xF7	; 247
     92e:	7f 4f       	sbci	r23, 0xFF	; 255
     930:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     934:	ce 01       	movw	r24, r28
     936:	05 96       	adiw	r24, 0x05	; 5
     938:	be 01       	movw	r22, r28
     93a:	6f 5e       	subi	r22, 0xEF	; 239
     93c:	7f 4f       	sbci	r23, 0xFF	; 255
     93e:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     942:	99 85       	ldd	r25, Y+9	; 0x09
     944:	92 30       	cpi	r25, 0x02	; 2
     946:	88 f0       	brcs	.+34     	; 0x96a <__mulsf3+0x60>
     948:	89 89       	ldd	r24, Y+17	; 0x11
     94a:	82 30       	cpi	r24, 0x02	; 2
     94c:	c8 f0       	brcs	.+50     	; 0x980 <__mulsf3+0x76>
     94e:	94 30       	cpi	r25, 0x04	; 4
     950:	19 f4       	brne	.+6      	; 0x958 <__mulsf3+0x4e>
     952:	82 30       	cpi	r24, 0x02	; 2
     954:	51 f4       	brne	.+20     	; 0x96a <__mulsf3+0x60>
     956:	04 c0       	rjmp	.+8      	; 0x960 <__mulsf3+0x56>
     958:	84 30       	cpi	r24, 0x04	; 4
     95a:	29 f4       	brne	.+10     	; 0x966 <__mulsf3+0x5c>
     95c:	92 30       	cpi	r25, 0x02	; 2
     95e:	81 f4       	brne	.+32     	; 0x980 <__mulsf3+0x76>
     960:	89 e7       	ldi	r24, 0x79	; 121
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	c6 c0       	rjmp	.+396    	; 0xaf2 <__mulsf3+0x1e8>
     966:	92 30       	cpi	r25, 0x02	; 2
     968:	49 f4       	brne	.+18     	; 0x97c <__mulsf3+0x72>
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	9a 85       	ldd	r25, Y+10	; 0x0a
     96e:	8a 89       	ldd	r24, Y+18	; 0x12
     970:	98 13       	cpse	r25, r24
     972:	21 e0       	ldi	r18, 0x01	; 1
     974:	2a 87       	std	Y+10, r18	; 0x0a
     976:	ce 01       	movw	r24, r28
     978:	09 96       	adiw	r24, 0x09	; 9
     97a:	bb c0       	rjmp	.+374    	; 0xaf2 <__mulsf3+0x1e8>
     97c:	82 30       	cpi	r24, 0x02	; 2
     97e:	49 f4       	brne	.+18     	; 0x992 <__mulsf3+0x88>
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	9a 85       	ldd	r25, Y+10	; 0x0a
     984:	8a 89       	ldd	r24, Y+18	; 0x12
     986:	98 13       	cpse	r25, r24
     988:	21 e0       	ldi	r18, 0x01	; 1
     98a:	2a 8b       	std	Y+18, r18	; 0x12
     98c:	ce 01       	movw	r24, r28
     98e:	41 96       	adiw	r24, 0x11	; 17
     990:	b0 c0       	rjmp	.+352    	; 0xaf2 <__mulsf3+0x1e8>
     992:	2d 84       	ldd	r2, Y+13	; 0x0d
     994:	3e 84       	ldd	r3, Y+14	; 0x0e
     996:	4f 84       	ldd	r4, Y+15	; 0x0f
     998:	58 88       	ldd	r5, Y+16	; 0x10
     99a:	6d 88       	ldd	r6, Y+21	; 0x15
     99c:	7e 88       	ldd	r7, Y+22	; 0x16
     99e:	8f 88       	ldd	r8, Y+23	; 0x17
     9a0:	98 8c       	ldd	r9, Y+24	; 0x18
     9a2:	ee 24       	eor	r14, r14
     9a4:	ff 24       	eor	r15, r15
     9a6:	87 01       	movw	r16, r14
     9a8:	aa 24       	eor	r10, r10
     9aa:	bb 24       	eor	r11, r11
     9ac:	65 01       	movw	r12, r10
     9ae:	40 e0       	ldi	r20, 0x00	; 0
     9b0:	50 e0       	ldi	r21, 0x00	; 0
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	e0 e0       	ldi	r30, 0x00	; 0
     9b8:	f0 e0       	ldi	r31, 0x00	; 0
     9ba:	c1 01       	movw	r24, r2
     9bc:	81 70       	andi	r24, 0x01	; 1
     9be:	90 70       	andi	r25, 0x00	; 0
     9c0:	89 2b       	or	r24, r25
     9c2:	e9 f0       	breq	.+58     	; 0x9fe <__mulsf3+0xf4>
     9c4:	e6 0c       	add	r14, r6
     9c6:	f7 1c       	adc	r15, r7
     9c8:	08 1d       	adc	r16, r8
     9ca:	19 1d       	adc	r17, r9
     9cc:	9a 01       	movw	r18, r20
     9ce:	ab 01       	movw	r20, r22
     9d0:	2a 0d       	add	r18, r10
     9d2:	3b 1d       	adc	r19, r11
     9d4:	4c 1d       	adc	r20, r12
     9d6:	5d 1d       	adc	r21, r13
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	90 e0       	ldi	r25, 0x00	; 0
     9dc:	a0 e0       	ldi	r26, 0x00	; 0
     9de:	b0 e0       	ldi	r27, 0x00	; 0
     9e0:	e6 14       	cp	r14, r6
     9e2:	f7 04       	cpc	r15, r7
     9e4:	08 05       	cpc	r16, r8
     9e6:	19 05       	cpc	r17, r9
     9e8:	20 f4       	brcc	.+8      	; 0x9f2 <__mulsf3+0xe8>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	a0 e0       	ldi	r26, 0x00	; 0
     9f0:	b0 e0       	ldi	r27, 0x00	; 0
     9f2:	ba 01       	movw	r22, r20
     9f4:	a9 01       	movw	r20, r18
     9f6:	48 0f       	add	r20, r24
     9f8:	59 1f       	adc	r21, r25
     9fa:	6a 1f       	adc	r22, r26
     9fc:	7b 1f       	adc	r23, r27
     9fe:	aa 0c       	add	r10, r10
     a00:	bb 1c       	adc	r11, r11
     a02:	cc 1c       	adc	r12, r12
     a04:	dd 1c       	adc	r13, r13
     a06:	97 fe       	sbrs	r9, 7
     a08:	08 c0       	rjmp	.+16     	; 0xa1a <__mulsf3+0x110>
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	a0 e0       	ldi	r26, 0x00	; 0
     a10:	b0 e0       	ldi	r27, 0x00	; 0
     a12:	a8 2a       	or	r10, r24
     a14:	b9 2a       	or	r11, r25
     a16:	ca 2a       	or	r12, r26
     a18:	db 2a       	or	r13, r27
     a1a:	31 96       	adiw	r30, 0x01	; 1
     a1c:	e0 32       	cpi	r30, 0x20	; 32
     a1e:	f1 05       	cpc	r31, r1
     a20:	49 f0       	breq	.+18     	; 0xa34 <__mulsf3+0x12a>
     a22:	66 0c       	add	r6, r6
     a24:	77 1c       	adc	r7, r7
     a26:	88 1c       	adc	r8, r8
     a28:	99 1c       	adc	r9, r9
     a2a:	56 94       	lsr	r5
     a2c:	47 94       	ror	r4
     a2e:	37 94       	ror	r3
     a30:	27 94       	ror	r2
     a32:	c3 cf       	rjmp	.-122    	; 0x9ba <__mulsf3+0xb0>
     a34:	fa 85       	ldd	r31, Y+10	; 0x0a
     a36:	ea 89       	ldd	r30, Y+18	; 0x12
     a38:	2b 89       	ldd	r18, Y+19	; 0x13
     a3a:	3c 89       	ldd	r19, Y+20	; 0x14
     a3c:	8b 85       	ldd	r24, Y+11	; 0x0b
     a3e:	9c 85       	ldd	r25, Y+12	; 0x0c
     a40:	28 0f       	add	r18, r24
     a42:	39 1f       	adc	r19, r25
     a44:	2e 5f       	subi	r18, 0xFE	; 254
     a46:	3f 4f       	sbci	r19, 0xFF	; 255
     a48:	17 c0       	rjmp	.+46     	; 0xa78 <__mulsf3+0x16e>
     a4a:	ca 01       	movw	r24, r20
     a4c:	81 70       	andi	r24, 0x01	; 1
     a4e:	90 70       	andi	r25, 0x00	; 0
     a50:	89 2b       	or	r24, r25
     a52:	61 f0       	breq	.+24     	; 0xa6c <__mulsf3+0x162>
     a54:	16 95       	lsr	r17
     a56:	07 95       	ror	r16
     a58:	f7 94       	ror	r15
     a5a:	e7 94       	ror	r14
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	a0 e0       	ldi	r26, 0x00	; 0
     a62:	b0 e8       	ldi	r27, 0x80	; 128
     a64:	e8 2a       	or	r14, r24
     a66:	f9 2a       	or	r15, r25
     a68:	0a 2b       	or	r16, r26
     a6a:	1b 2b       	or	r17, r27
     a6c:	76 95       	lsr	r23
     a6e:	67 95       	ror	r22
     a70:	57 95       	ror	r21
     a72:	47 95       	ror	r20
     a74:	2f 5f       	subi	r18, 0xFF	; 255
     a76:	3f 4f       	sbci	r19, 0xFF	; 255
     a78:	77 fd       	sbrc	r23, 7
     a7a:	e7 cf       	rjmp	.-50     	; 0xa4a <__mulsf3+0x140>
     a7c:	0c c0       	rjmp	.+24     	; 0xa96 <__mulsf3+0x18c>
     a7e:	44 0f       	add	r20, r20
     a80:	55 1f       	adc	r21, r21
     a82:	66 1f       	adc	r22, r22
     a84:	77 1f       	adc	r23, r23
     a86:	17 fd       	sbrc	r17, 7
     a88:	41 60       	ori	r20, 0x01	; 1
     a8a:	ee 0c       	add	r14, r14
     a8c:	ff 1c       	adc	r15, r15
     a8e:	00 1f       	adc	r16, r16
     a90:	11 1f       	adc	r17, r17
     a92:	21 50       	subi	r18, 0x01	; 1
     a94:	30 40       	sbci	r19, 0x00	; 0
     a96:	40 30       	cpi	r20, 0x00	; 0
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	59 07       	cpc	r21, r25
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	69 07       	cpc	r22, r25
     aa0:	90 e4       	ldi	r25, 0x40	; 64
     aa2:	79 07       	cpc	r23, r25
     aa4:	60 f3       	brcs	.-40     	; 0xa7e <__mulsf3+0x174>
     aa6:	2b 8f       	std	Y+27, r18	; 0x1b
     aa8:	3c 8f       	std	Y+28, r19	; 0x1c
     aaa:	db 01       	movw	r26, r22
     aac:	ca 01       	movw	r24, r20
     aae:	8f 77       	andi	r24, 0x7F	; 127
     ab0:	90 70       	andi	r25, 0x00	; 0
     ab2:	a0 70       	andi	r26, 0x00	; 0
     ab4:	b0 70       	andi	r27, 0x00	; 0
     ab6:	80 34       	cpi	r24, 0x40	; 64
     ab8:	91 05       	cpc	r25, r1
     aba:	a1 05       	cpc	r26, r1
     abc:	b1 05       	cpc	r27, r1
     abe:	61 f4       	brne	.+24     	; 0xad8 <__mulsf3+0x1ce>
     ac0:	47 fd       	sbrc	r20, 7
     ac2:	0a c0       	rjmp	.+20     	; 0xad8 <__mulsf3+0x1ce>
     ac4:	e1 14       	cp	r14, r1
     ac6:	f1 04       	cpc	r15, r1
     ac8:	01 05       	cpc	r16, r1
     aca:	11 05       	cpc	r17, r1
     acc:	29 f0       	breq	.+10     	; 0xad8 <__mulsf3+0x1ce>
     ace:	40 5c       	subi	r20, 0xC0	; 192
     ad0:	5f 4f       	sbci	r21, 0xFF	; 255
     ad2:	6f 4f       	sbci	r22, 0xFF	; 255
     ad4:	7f 4f       	sbci	r23, 0xFF	; 255
     ad6:	40 78       	andi	r20, 0x80	; 128
     ad8:	1a 8e       	std	Y+26, r1	; 0x1a
     ada:	fe 17       	cp	r31, r30
     adc:	11 f0       	breq	.+4      	; 0xae2 <__mulsf3+0x1d8>
     ade:	81 e0       	ldi	r24, 0x01	; 1
     ae0:	8a 8f       	std	Y+26, r24	; 0x1a
     ae2:	4d 8f       	std	Y+29, r20	; 0x1d
     ae4:	5e 8f       	std	Y+30, r21	; 0x1e
     ae6:	6f 8f       	std	Y+31, r22	; 0x1f
     ae8:	78 a3       	std	Y+32, r23	; 0x20
     aea:	83 e0       	ldi	r24, 0x03	; 3
     aec:	89 8f       	std	Y+25, r24	; 0x19
     aee:	ce 01       	movw	r24, r28
     af0:	49 96       	adiw	r24, 0x19	; 25
     af2:	0e 94 cb 06 	call	0xd96	; 0xd96 <__pack_f>
     af6:	a0 96       	adiw	r28, 0x20	; 32
     af8:	e2 e1       	ldi	r30, 0x12	; 18
     afa:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__epilogue_restores__>

00000afe <__gesf2>:
     afe:	a8 e1       	ldi	r26, 0x18	; 24
     b00:	b0 e0       	ldi	r27, 0x00	; 0
     b02:	e5 e8       	ldi	r30, 0x85	; 133
     b04:	f5 e0       	ldi	r31, 0x05	; 5
     b06:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__prologue_saves__+0x18>
     b0a:	69 83       	std	Y+1, r22	; 0x01
     b0c:	7a 83       	std	Y+2, r23	; 0x02
     b0e:	8b 83       	std	Y+3, r24	; 0x03
     b10:	9c 83       	std	Y+4, r25	; 0x04
     b12:	2d 83       	std	Y+5, r18	; 0x05
     b14:	3e 83       	std	Y+6, r19	; 0x06
     b16:	4f 83       	std	Y+7, r20	; 0x07
     b18:	58 87       	std	Y+8, r21	; 0x08
     b1a:	89 e0       	ldi	r24, 0x09	; 9
     b1c:	e8 2e       	mov	r14, r24
     b1e:	f1 2c       	mov	r15, r1
     b20:	ec 0e       	add	r14, r28
     b22:	fd 1e       	adc	r15, r29
     b24:	ce 01       	movw	r24, r28
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	b7 01       	movw	r22, r14
     b2a:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     b2e:	8e 01       	movw	r16, r28
     b30:	0f 5e       	subi	r16, 0xEF	; 239
     b32:	1f 4f       	sbci	r17, 0xFF	; 255
     b34:	ce 01       	movw	r24, r28
     b36:	05 96       	adiw	r24, 0x05	; 5
     b38:	b8 01       	movw	r22, r16
     b3a:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     b3e:	89 85       	ldd	r24, Y+9	; 0x09
     b40:	82 30       	cpi	r24, 0x02	; 2
     b42:	40 f0       	brcs	.+16     	; 0xb54 <__gesf2+0x56>
     b44:	89 89       	ldd	r24, Y+17	; 0x11
     b46:	82 30       	cpi	r24, 0x02	; 2
     b48:	28 f0       	brcs	.+10     	; 0xb54 <__gesf2+0x56>
     b4a:	c7 01       	movw	r24, r14
     b4c:	b8 01       	movw	r22, r16
     b4e:	0e 94 18 08 	call	0x1030	; 0x1030 <__fpcmp_parts_f>
     b52:	01 c0       	rjmp	.+2      	; 0xb56 <__gesf2+0x58>
     b54:	8f ef       	ldi	r24, 0xFF	; 255
     b56:	68 96       	adiw	r28, 0x18	; 24
     b58:	e6 e0       	ldi	r30, 0x06	; 6
     b5a:	0c 94 99 08 	jmp	0x1132	; 0x1132 <__epilogue_restores__+0x18>

00000b5e <__fixsfsi>:
     b5e:	ac e0       	ldi	r26, 0x0C	; 12
     b60:	b0 e0       	ldi	r27, 0x00	; 0
     b62:	e5 eb       	ldi	r30, 0xB5	; 181
     b64:	f5 e0       	ldi	r31, 0x05	; 5
     b66:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__prologue_saves__+0x20>
     b6a:	69 83       	std	Y+1, r22	; 0x01
     b6c:	7a 83       	std	Y+2, r23	; 0x02
     b6e:	8b 83       	std	Y+3, r24	; 0x03
     b70:	9c 83       	std	Y+4, r25	; 0x04
     b72:	ce 01       	movw	r24, r28
     b74:	01 96       	adiw	r24, 0x01	; 1
     b76:	be 01       	movw	r22, r28
     b78:	6b 5f       	subi	r22, 0xFB	; 251
     b7a:	7f 4f       	sbci	r23, 0xFF	; 255
     b7c:	0e 94 a0 07 	call	0xf40	; 0xf40 <__unpack_f>
     b80:	8d 81       	ldd	r24, Y+5	; 0x05
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	61 f1       	breq	.+88     	; 0xbde <__fixsfsi+0x80>
     b86:	82 30       	cpi	r24, 0x02	; 2
     b88:	50 f1       	brcs	.+84     	; 0xbde <__fixsfsi+0x80>
     b8a:	84 30       	cpi	r24, 0x04	; 4
     b8c:	21 f4       	brne	.+8      	; 0xb96 <__fixsfsi+0x38>
     b8e:	8e 81       	ldd	r24, Y+6	; 0x06
     b90:	88 23       	and	r24, r24
     b92:	51 f1       	breq	.+84     	; 0xbe8 <__fixsfsi+0x8a>
     b94:	2e c0       	rjmp	.+92     	; 0xbf2 <__fixsfsi+0x94>
     b96:	2f 81       	ldd	r18, Y+7	; 0x07
     b98:	38 85       	ldd	r19, Y+8	; 0x08
     b9a:	37 fd       	sbrc	r19, 7
     b9c:	20 c0       	rjmp	.+64     	; 0xbde <__fixsfsi+0x80>
     b9e:	6e 81       	ldd	r22, Y+6	; 0x06
     ba0:	2f 31       	cpi	r18, 0x1F	; 31
     ba2:	31 05       	cpc	r19, r1
     ba4:	1c f0       	brlt	.+6      	; 0xbac <__fixsfsi+0x4e>
     ba6:	66 23       	and	r22, r22
     ba8:	f9 f0       	breq	.+62     	; 0xbe8 <__fixsfsi+0x8a>
     baa:	23 c0       	rjmp	.+70     	; 0xbf2 <__fixsfsi+0x94>
     bac:	8e e1       	ldi	r24, 0x1E	; 30
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	82 1b       	sub	r24, r18
     bb2:	93 0b       	sbc	r25, r19
     bb4:	29 85       	ldd	r18, Y+9	; 0x09
     bb6:	3a 85       	ldd	r19, Y+10	; 0x0a
     bb8:	4b 85       	ldd	r20, Y+11	; 0x0b
     bba:	5c 85       	ldd	r21, Y+12	; 0x0c
     bbc:	04 c0       	rjmp	.+8      	; 0xbc6 <__fixsfsi+0x68>
     bbe:	56 95       	lsr	r21
     bc0:	47 95       	ror	r20
     bc2:	37 95       	ror	r19
     bc4:	27 95       	ror	r18
     bc6:	8a 95       	dec	r24
     bc8:	d2 f7       	brpl	.-12     	; 0xbbe <__fixsfsi+0x60>
     bca:	66 23       	and	r22, r22
     bcc:	b1 f0       	breq	.+44     	; 0xbfa <__fixsfsi+0x9c>
     bce:	50 95       	com	r21
     bd0:	40 95       	com	r20
     bd2:	30 95       	com	r19
     bd4:	21 95       	neg	r18
     bd6:	3f 4f       	sbci	r19, 0xFF	; 255
     bd8:	4f 4f       	sbci	r20, 0xFF	; 255
     bda:	5f 4f       	sbci	r21, 0xFF	; 255
     bdc:	0e c0       	rjmp	.+28     	; 0xbfa <__fixsfsi+0x9c>
     bde:	20 e0       	ldi	r18, 0x00	; 0
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	40 e0       	ldi	r20, 0x00	; 0
     be4:	50 e0       	ldi	r21, 0x00	; 0
     be6:	09 c0       	rjmp	.+18     	; 0xbfa <__fixsfsi+0x9c>
     be8:	2f ef       	ldi	r18, 0xFF	; 255
     bea:	3f ef       	ldi	r19, 0xFF	; 255
     bec:	4f ef       	ldi	r20, 0xFF	; 255
     bee:	5f e7       	ldi	r21, 0x7F	; 127
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__fixsfsi+0x9c>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	40 e0       	ldi	r20, 0x00	; 0
     bf8:	50 e8       	ldi	r21, 0x80	; 128
     bfa:	b9 01       	movw	r22, r18
     bfc:	ca 01       	movw	r24, r20
     bfe:	2c 96       	adiw	r28, 0x0c	; 12
     c00:	e2 e0       	ldi	r30, 0x02	; 2
     c02:	0c 94 9d 08 	jmp	0x113a	; 0x113a <__epilogue_restores__+0x20>

00000c06 <__floatunsisf>:
     c06:	a8 e0       	ldi	r26, 0x08	; 8
     c08:	b0 e0       	ldi	r27, 0x00	; 0
     c0a:	e9 e0       	ldi	r30, 0x09	; 9
     c0c:	f6 e0       	ldi	r31, 0x06	; 6
     c0e:	0c 94 79 08 	jmp	0x10f2	; 0x10f2 <__prologue_saves__+0x10>
     c12:	7b 01       	movw	r14, r22
     c14:	8c 01       	movw	r16, r24
     c16:	61 15       	cp	r22, r1
     c18:	71 05       	cpc	r23, r1
     c1a:	81 05       	cpc	r24, r1
     c1c:	91 05       	cpc	r25, r1
     c1e:	19 f4       	brne	.+6      	; 0xc26 <__floatunsisf+0x20>
     c20:	82 e0       	ldi	r24, 0x02	; 2
     c22:	89 83       	std	Y+1, r24	; 0x01
     c24:	60 c0       	rjmp	.+192    	; 0xce6 <__floatunsisf+0xe0>
     c26:	83 e0       	ldi	r24, 0x03	; 3
     c28:	89 83       	std	Y+1, r24	; 0x01
     c2a:	8e e1       	ldi	r24, 0x1E	; 30
     c2c:	c8 2e       	mov	r12, r24
     c2e:	d1 2c       	mov	r13, r1
     c30:	dc 82       	std	Y+4, r13	; 0x04
     c32:	cb 82       	std	Y+3, r12	; 0x03
     c34:	ed 82       	std	Y+5, r14	; 0x05
     c36:	fe 82       	std	Y+6, r15	; 0x06
     c38:	0f 83       	std	Y+7, r16	; 0x07
     c3a:	18 87       	std	Y+8, r17	; 0x08
     c3c:	c8 01       	movw	r24, r16
     c3e:	b7 01       	movw	r22, r14
     c40:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__clzsi2>
     c44:	fc 01       	movw	r30, r24
     c46:	31 97       	sbiw	r30, 0x01	; 1
     c48:	f7 ff       	sbrs	r31, 7
     c4a:	3b c0       	rjmp	.+118    	; 0xcc2 <__floatunsisf+0xbc>
     c4c:	22 27       	eor	r18, r18
     c4e:	33 27       	eor	r19, r19
     c50:	2e 1b       	sub	r18, r30
     c52:	3f 0b       	sbc	r19, r31
     c54:	57 01       	movw	r10, r14
     c56:	68 01       	movw	r12, r16
     c58:	02 2e       	mov	r0, r18
     c5a:	04 c0       	rjmp	.+8      	; 0xc64 <__floatunsisf+0x5e>
     c5c:	d6 94       	lsr	r13
     c5e:	c7 94       	ror	r12
     c60:	b7 94       	ror	r11
     c62:	a7 94       	ror	r10
     c64:	0a 94       	dec	r0
     c66:	d2 f7       	brpl	.-12     	; 0xc5c <__floatunsisf+0x56>
     c68:	40 e0       	ldi	r20, 0x00	; 0
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	a0 e0       	ldi	r26, 0x00	; 0
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <__floatunsisf+0x7c>
     c7a:	88 0f       	add	r24, r24
     c7c:	99 1f       	adc	r25, r25
     c7e:	aa 1f       	adc	r26, r26
     c80:	bb 1f       	adc	r27, r27
     c82:	2a 95       	dec	r18
     c84:	d2 f7       	brpl	.-12     	; 0xc7a <__floatunsisf+0x74>
     c86:	01 97       	sbiw	r24, 0x01	; 1
     c88:	a1 09       	sbc	r26, r1
     c8a:	b1 09       	sbc	r27, r1
     c8c:	8e 21       	and	r24, r14
     c8e:	9f 21       	and	r25, r15
     c90:	a0 23       	and	r26, r16
     c92:	b1 23       	and	r27, r17
     c94:	00 97       	sbiw	r24, 0x00	; 0
     c96:	a1 05       	cpc	r26, r1
     c98:	b1 05       	cpc	r27, r1
     c9a:	21 f0       	breq	.+8      	; 0xca4 <__floatunsisf+0x9e>
     c9c:	41 e0       	ldi	r20, 0x01	; 1
     c9e:	50 e0       	ldi	r21, 0x00	; 0
     ca0:	60 e0       	ldi	r22, 0x00	; 0
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	4a 29       	or	r20, r10
     ca6:	5b 29       	or	r21, r11
     ca8:	6c 29       	or	r22, r12
     caa:	7d 29       	or	r23, r13
     cac:	4d 83       	std	Y+5, r20	; 0x05
     cae:	5e 83       	std	Y+6, r21	; 0x06
     cb0:	6f 83       	std	Y+7, r22	; 0x07
     cb2:	78 87       	std	Y+8, r23	; 0x08
     cb4:	8e e1       	ldi	r24, 0x1E	; 30
     cb6:	90 e0       	ldi	r25, 0x00	; 0
     cb8:	8e 1b       	sub	r24, r30
     cba:	9f 0b       	sbc	r25, r31
     cbc:	9c 83       	std	Y+4, r25	; 0x04
     cbe:	8b 83       	std	Y+3, r24	; 0x03
     cc0:	12 c0       	rjmp	.+36     	; 0xce6 <__floatunsisf+0xe0>
     cc2:	30 97       	sbiw	r30, 0x00	; 0
     cc4:	81 f0       	breq	.+32     	; 0xce6 <__floatunsisf+0xe0>
     cc6:	0e 2e       	mov	r0, r30
     cc8:	04 c0       	rjmp	.+8      	; 0xcd2 <__floatunsisf+0xcc>
     cca:	ee 0c       	add	r14, r14
     ccc:	ff 1c       	adc	r15, r15
     cce:	00 1f       	adc	r16, r16
     cd0:	11 1f       	adc	r17, r17
     cd2:	0a 94       	dec	r0
     cd4:	d2 f7       	brpl	.-12     	; 0xcca <__floatunsisf+0xc4>
     cd6:	ed 82       	std	Y+5, r14	; 0x05
     cd8:	fe 82       	std	Y+6, r15	; 0x06
     cda:	0f 83       	std	Y+7, r16	; 0x07
     cdc:	18 87       	std	Y+8, r17	; 0x08
     cde:	ce 1a       	sub	r12, r30
     ce0:	df 0a       	sbc	r13, r31
     ce2:	dc 82       	std	Y+4, r13	; 0x04
     ce4:	cb 82       	std	Y+3, r12	; 0x03
     ce6:	1a 82       	std	Y+2, r1	; 0x02
     ce8:	ce 01       	movw	r24, r28
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	0e 94 cb 06 	call	0xd96	; 0xd96 <__pack_f>
     cf0:	28 96       	adiw	r28, 0x08	; 8
     cf2:	ea e0       	ldi	r30, 0x0A	; 10
     cf4:	0c 94 95 08 	jmp	0x112a	; 0x112a <__epilogue_restores__+0x10>

00000cf8 <__clzsi2>:
     cf8:	ef 92       	push	r14
     cfa:	ff 92       	push	r15
     cfc:	0f 93       	push	r16
     cfe:	1f 93       	push	r17
     d00:	7b 01       	movw	r14, r22
     d02:	8c 01       	movw	r16, r24
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	e8 16       	cp	r14, r24
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	f8 06       	cpc	r15, r24
     d0c:	81 e0       	ldi	r24, 0x01	; 1
     d0e:	08 07       	cpc	r16, r24
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	18 07       	cpc	r17, r24
     d14:	88 f4       	brcc	.+34     	; 0xd38 <__clzsi2+0x40>
     d16:	8f ef       	ldi	r24, 0xFF	; 255
     d18:	e8 16       	cp	r14, r24
     d1a:	f1 04       	cpc	r15, r1
     d1c:	01 05       	cpc	r16, r1
     d1e:	11 05       	cpc	r17, r1
     d20:	31 f0       	breq	.+12     	; 0xd2e <__clzsi2+0x36>
     d22:	28 f0       	brcs	.+10     	; 0xd2e <__clzsi2+0x36>
     d24:	88 e0       	ldi	r24, 0x08	; 8
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	a0 e0       	ldi	r26, 0x00	; 0
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	17 c0       	rjmp	.+46     	; 0xd5c <__clzsi2+0x64>
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	a0 e0       	ldi	r26, 0x00	; 0
     d34:	b0 e0       	ldi	r27, 0x00	; 0
     d36:	12 c0       	rjmp	.+36     	; 0xd5c <__clzsi2+0x64>
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	e8 16       	cp	r14, r24
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	f8 06       	cpc	r15, r24
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	08 07       	cpc	r16, r24
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	18 07       	cpc	r17, r24
     d48:	28 f0       	brcs	.+10     	; 0xd54 <__clzsi2+0x5c>
     d4a:	88 e1       	ldi	r24, 0x18	; 24
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	a0 e0       	ldi	r26, 0x00	; 0
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	04 c0       	rjmp	.+8      	; 0xd5c <__clzsi2+0x64>
     d54:	80 e1       	ldi	r24, 0x10	; 16
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	a0 e0       	ldi	r26, 0x00	; 0
     d5a:	b0 e0       	ldi	r27, 0x00	; 0
     d5c:	20 e2       	ldi	r18, 0x20	; 32
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	40 e0       	ldi	r20, 0x00	; 0
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	28 1b       	sub	r18, r24
     d66:	39 0b       	sbc	r19, r25
     d68:	4a 0b       	sbc	r20, r26
     d6a:	5b 0b       	sbc	r21, r27
     d6c:	04 c0       	rjmp	.+8      	; 0xd76 <__clzsi2+0x7e>
     d6e:	16 95       	lsr	r17
     d70:	07 95       	ror	r16
     d72:	f7 94       	ror	r15
     d74:	e7 94       	ror	r14
     d76:	8a 95       	dec	r24
     d78:	d2 f7       	brpl	.-12     	; 0xd6e <__clzsi2+0x76>
     d7a:	f7 01       	movw	r30, r14
     d7c:	ef 57       	subi	r30, 0x7F	; 127
     d7e:	ff 4f       	sbci	r31, 0xFF	; 255
     d80:	80 81       	ld	r24, Z
     d82:	28 1b       	sub	r18, r24
     d84:	31 09       	sbc	r19, r1
     d86:	41 09       	sbc	r20, r1
     d88:	51 09       	sbc	r21, r1
     d8a:	c9 01       	movw	r24, r18
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	ff 90       	pop	r15
     d92:	ef 90       	pop	r14
     d94:	08 95       	ret

00000d96 <__pack_f>:
     d96:	df 92       	push	r13
     d98:	ef 92       	push	r14
     d9a:	ff 92       	push	r15
     d9c:	0f 93       	push	r16
     d9e:	1f 93       	push	r17
     da0:	fc 01       	movw	r30, r24
     da2:	e4 80       	ldd	r14, Z+4	; 0x04
     da4:	f5 80       	ldd	r15, Z+5	; 0x05
     da6:	06 81       	ldd	r16, Z+6	; 0x06
     da8:	17 81       	ldd	r17, Z+7	; 0x07
     daa:	d1 80       	ldd	r13, Z+1	; 0x01
     dac:	80 81       	ld	r24, Z
     dae:	82 30       	cpi	r24, 0x02	; 2
     db0:	48 f4       	brcc	.+18     	; 0xdc4 <__pack_f+0x2e>
     db2:	80 e0       	ldi	r24, 0x00	; 0
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	a0 e1       	ldi	r26, 0x10	; 16
     db8:	b0 e0       	ldi	r27, 0x00	; 0
     dba:	e8 2a       	or	r14, r24
     dbc:	f9 2a       	or	r15, r25
     dbe:	0a 2b       	or	r16, r26
     dc0:	1b 2b       	or	r17, r27
     dc2:	a5 c0       	rjmp	.+330    	; 0xf0e <__pack_f+0x178>
     dc4:	84 30       	cpi	r24, 0x04	; 4
     dc6:	09 f4       	brne	.+2      	; 0xdca <__pack_f+0x34>
     dc8:	9f c0       	rjmp	.+318    	; 0xf08 <__pack_f+0x172>
     dca:	82 30       	cpi	r24, 0x02	; 2
     dcc:	21 f4       	brne	.+8      	; 0xdd6 <__pack_f+0x40>
     dce:	ee 24       	eor	r14, r14
     dd0:	ff 24       	eor	r15, r15
     dd2:	87 01       	movw	r16, r14
     dd4:	05 c0       	rjmp	.+10     	; 0xde0 <__pack_f+0x4a>
     dd6:	e1 14       	cp	r14, r1
     dd8:	f1 04       	cpc	r15, r1
     dda:	01 05       	cpc	r16, r1
     ddc:	11 05       	cpc	r17, r1
     dde:	19 f4       	brne	.+6      	; 0xde6 <__pack_f+0x50>
     de0:	e0 e0       	ldi	r30, 0x00	; 0
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	96 c0       	rjmp	.+300    	; 0xf12 <__pack_f+0x17c>
     de6:	62 81       	ldd	r22, Z+2	; 0x02
     de8:	73 81       	ldd	r23, Z+3	; 0x03
     dea:	9f ef       	ldi	r25, 0xFF	; 255
     dec:	62 38       	cpi	r22, 0x82	; 130
     dee:	79 07       	cpc	r23, r25
     df0:	0c f0       	brlt	.+2      	; 0xdf4 <__pack_f+0x5e>
     df2:	5b c0       	rjmp	.+182    	; 0xeaa <__pack_f+0x114>
     df4:	22 e8       	ldi	r18, 0x82	; 130
     df6:	3f ef       	ldi	r19, 0xFF	; 255
     df8:	26 1b       	sub	r18, r22
     dfa:	37 0b       	sbc	r19, r23
     dfc:	2a 31       	cpi	r18, 0x1A	; 26
     dfe:	31 05       	cpc	r19, r1
     e00:	2c f0       	brlt	.+10     	; 0xe0c <__pack_f+0x76>
     e02:	20 e0       	ldi	r18, 0x00	; 0
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	50 e0       	ldi	r21, 0x00	; 0
     e0a:	2a c0       	rjmp	.+84     	; 0xe60 <__pack_f+0xca>
     e0c:	b8 01       	movw	r22, r16
     e0e:	a7 01       	movw	r20, r14
     e10:	02 2e       	mov	r0, r18
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <__pack_f+0x86>
     e14:	76 95       	lsr	r23
     e16:	67 95       	ror	r22
     e18:	57 95       	ror	r21
     e1a:	47 95       	ror	r20
     e1c:	0a 94       	dec	r0
     e1e:	d2 f7       	brpl	.-12     	; 0xe14 <__pack_f+0x7e>
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	a0 e0       	ldi	r26, 0x00	; 0
     e26:	b0 e0       	ldi	r27, 0x00	; 0
     e28:	04 c0       	rjmp	.+8      	; 0xe32 <__pack_f+0x9c>
     e2a:	88 0f       	add	r24, r24
     e2c:	99 1f       	adc	r25, r25
     e2e:	aa 1f       	adc	r26, r26
     e30:	bb 1f       	adc	r27, r27
     e32:	2a 95       	dec	r18
     e34:	d2 f7       	brpl	.-12     	; 0xe2a <__pack_f+0x94>
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	a1 09       	sbc	r26, r1
     e3a:	b1 09       	sbc	r27, r1
     e3c:	8e 21       	and	r24, r14
     e3e:	9f 21       	and	r25, r15
     e40:	a0 23       	and	r26, r16
     e42:	b1 23       	and	r27, r17
     e44:	00 97       	sbiw	r24, 0x00	; 0
     e46:	a1 05       	cpc	r26, r1
     e48:	b1 05       	cpc	r27, r1
     e4a:	21 f0       	breq	.+8      	; 0xe54 <__pack_f+0xbe>
     e4c:	81 e0       	ldi	r24, 0x01	; 1
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	a0 e0       	ldi	r26, 0x00	; 0
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	9a 01       	movw	r18, r20
     e56:	ab 01       	movw	r20, r22
     e58:	28 2b       	or	r18, r24
     e5a:	39 2b       	or	r19, r25
     e5c:	4a 2b       	or	r20, r26
     e5e:	5b 2b       	or	r21, r27
     e60:	da 01       	movw	r26, r20
     e62:	c9 01       	movw	r24, r18
     e64:	8f 77       	andi	r24, 0x7F	; 127
     e66:	90 70       	andi	r25, 0x00	; 0
     e68:	a0 70       	andi	r26, 0x00	; 0
     e6a:	b0 70       	andi	r27, 0x00	; 0
     e6c:	80 34       	cpi	r24, 0x40	; 64
     e6e:	91 05       	cpc	r25, r1
     e70:	a1 05       	cpc	r26, r1
     e72:	b1 05       	cpc	r27, r1
     e74:	39 f4       	brne	.+14     	; 0xe84 <__pack_f+0xee>
     e76:	27 ff       	sbrs	r18, 7
     e78:	09 c0       	rjmp	.+18     	; 0xe8c <__pack_f+0xf6>
     e7a:	20 5c       	subi	r18, 0xC0	; 192
     e7c:	3f 4f       	sbci	r19, 0xFF	; 255
     e7e:	4f 4f       	sbci	r20, 0xFF	; 255
     e80:	5f 4f       	sbci	r21, 0xFF	; 255
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <__pack_f+0xf6>
     e84:	21 5c       	subi	r18, 0xC1	; 193
     e86:	3f 4f       	sbci	r19, 0xFF	; 255
     e88:	4f 4f       	sbci	r20, 0xFF	; 255
     e8a:	5f 4f       	sbci	r21, 0xFF	; 255
     e8c:	e0 e0       	ldi	r30, 0x00	; 0
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	20 30       	cpi	r18, 0x00	; 0
     e92:	a0 e0       	ldi	r26, 0x00	; 0
     e94:	3a 07       	cpc	r19, r26
     e96:	a0 e0       	ldi	r26, 0x00	; 0
     e98:	4a 07       	cpc	r20, r26
     e9a:	a0 e4       	ldi	r26, 0x40	; 64
     e9c:	5a 07       	cpc	r21, r26
     e9e:	10 f0       	brcs	.+4      	; 0xea4 <__pack_f+0x10e>
     ea0:	e1 e0       	ldi	r30, 0x01	; 1
     ea2:	f0 e0       	ldi	r31, 0x00	; 0
     ea4:	79 01       	movw	r14, r18
     ea6:	8a 01       	movw	r16, r20
     ea8:	27 c0       	rjmp	.+78     	; 0xef8 <__pack_f+0x162>
     eaa:	60 38       	cpi	r22, 0x80	; 128
     eac:	71 05       	cpc	r23, r1
     eae:	64 f5       	brge	.+88     	; 0xf08 <__pack_f+0x172>
     eb0:	fb 01       	movw	r30, r22
     eb2:	e1 58       	subi	r30, 0x81	; 129
     eb4:	ff 4f       	sbci	r31, 0xFF	; 255
     eb6:	d8 01       	movw	r26, r16
     eb8:	c7 01       	movw	r24, r14
     eba:	8f 77       	andi	r24, 0x7F	; 127
     ebc:	90 70       	andi	r25, 0x00	; 0
     ebe:	a0 70       	andi	r26, 0x00	; 0
     ec0:	b0 70       	andi	r27, 0x00	; 0
     ec2:	80 34       	cpi	r24, 0x40	; 64
     ec4:	91 05       	cpc	r25, r1
     ec6:	a1 05       	cpc	r26, r1
     ec8:	b1 05       	cpc	r27, r1
     eca:	39 f4       	brne	.+14     	; 0xeda <__pack_f+0x144>
     ecc:	e7 fe       	sbrs	r14, 7
     ece:	0d c0       	rjmp	.+26     	; 0xeea <__pack_f+0x154>
     ed0:	80 e4       	ldi	r24, 0x40	; 64
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	04 c0       	rjmp	.+8      	; 0xee2 <__pack_f+0x14c>
     eda:	8f e3       	ldi	r24, 0x3F	; 63
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	e8 0e       	add	r14, r24
     ee4:	f9 1e       	adc	r15, r25
     ee6:	0a 1f       	adc	r16, r26
     ee8:	1b 1f       	adc	r17, r27
     eea:	17 ff       	sbrs	r17, 7
     eec:	05 c0       	rjmp	.+10     	; 0xef8 <__pack_f+0x162>
     eee:	16 95       	lsr	r17
     ef0:	07 95       	ror	r16
     ef2:	f7 94       	ror	r15
     ef4:	e7 94       	ror	r14
     ef6:	31 96       	adiw	r30, 0x01	; 1
     ef8:	87 e0       	ldi	r24, 0x07	; 7
     efa:	16 95       	lsr	r17
     efc:	07 95       	ror	r16
     efe:	f7 94       	ror	r15
     f00:	e7 94       	ror	r14
     f02:	8a 95       	dec	r24
     f04:	d1 f7       	brne	.-12     	; 0xefa <__pack_f+0x164>
     f06:	05 c0       	rjmp	.+10     	; 0xf12 <__pack_f+0x17c>
     f08:	ee 24       	eor	r14, r14
     f0a:	ff 24       	eor	r15, r15
     f0c:	87 01       	movw	r16, r14
     f0e:	ef ef       	ldi	r30, 0xFF	; 255
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	6e 2f       	mov	r22, r30
     f14:	67 95       	ror	r22
     f16:	66 27       	eor	r22, r22
     f18:	67 95       	ror	r22
     f1a:	90 2f       	mov	r25, r16
     f1c:	9f 77       	andi	r25, 0x7F	; 127
     f1e:	d7 94       	ror	r13
     f20:	dd 24       	eor	r13, r13
     f22:	d7 94       	ror	r13
     f24:	8e 2f       	mov	r24, r30
     f26:	86 95       	lsr	r24
     f28:	49 2f       	mov	r20, r25
     f2a:	46 2b       	or	r20, r22
     f2c:	58 2f       	mov	r21, r24
     f2e:	5d 29       	or	r21, r13
     f30:	b7 01       	movw	r22, r14
     f32:	ca 01       	movw	r24, r20
     f34:	1f 91       	pop	r17
     f36:	0f 91       	pop	r16
     f38:	ff 90       	pop	r15
     f3a:	ef 90       	pop	r14
     f3c:	df 90       	pop	r13
     f3e:	08 95       	ret

00000f40 <__unpack_f>:
     f40:	fc 01       	movw	r30, r24
     f42:	db 01       	movw	r26, r22
     f44:	40 81       	ld	r20, Z
     f46:	51 81       	ldd	r21, Z+1	; 0x01
     f48:	22 81       	ldd	r18, Z+2	; 0x02
     f4a:	62 2f       	mov	r22, r18
     f4c:	6f 77       	andi	r22, 0x7F	; 127
     f4e:	70 e0       	ldi	r23, 0x00	; 0
     f50:	22 1f       	adc	r18, r18
     f52:	22 27       	eor	r18, r18
     f54:	22 1f       	adc	r18, r18
     f56:	93 81       	ldd	r25, Z+3	; 0x03
     f58:	89 2f       	mov	r24, r25
     f5a:	88 0f       	add	r24, r24
     f5c:	82 2b       	or	r24, r18
     f5e:	28 2f       	mov	r18, r24
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	99 1f       	adc	r25, r25
     f64:	99 27       	eor	r25, r25
     f66:	99 1f       	adc	r25, r25
     f68:	11 96       	adiw	r26, 0x01	; 1
     f6a:	9c 93       	st	X, r25
     f6c:	11 97       	sbiw	r26, 0x01	; 1
     f6e:	21 15       	cp	r18, r1
     f70:	31 05       	cpc	r19, r1
     f72:	a9 f5       	brne	.+106    	; 0xfde <__unpack_f+0x9e>
     f74:	41 15       	cp	r20, r1
     f76:	51 05       	cpc	r21, r1
     f78:	61 05       	cpc	r22, r1
     f7a:	71 05       	cpc	r23, r1
     f7c:	11 f4       	brne	.+4      	; 0xf82 <__unpack_f+0x42>
     f7e:	82 e0       	ldi	r24, 0x02	; 2
     f80:	37 c0       	rjmp	.+110    	; 0xff0 <__unpack_f+0xb0>
     f82:	82 e8       	ldi	r24, 0x82	; 130
     f84:	9f ef       	ldi	r25, 0xFF	; 255
     f86:	13 96       	adiw	r26, 0x03	; 3
     f88:	9c 93       	st	X, r25
     f8a:	8e 93       	st	-X, r24
     f8c:	12 97       	sbiw	r26, 0x02	; 2
     f8e:	9a 01       	movw	r18, r20
     f90:	ab 01       	movw	r20, r22
     f92:	67 e0       	ldi	r22, 0x07	; 7
     f94:	22 0f       	add	r18, r18
     f96:	33 1f       	adc	r19, r19
     f98:	44 1f       	adc	r20, r20
     f9a:	55 1f       	adc	r21, r21
     f9c:	6a 95       	dec	r22
     f9e:	d1 f7       	brne	.-12     	; 0xf94 <__unpack_f+0x54>
     fa0:	83 e0       	ldi	r24, 0x03	; 3
     fa2:	8c 93       	st	X, r24
     fa4:	0d c0       	rjmp	.+26     	; 0xfc0 <__unpack_f+0x80>
     fa6:	22 0f       	add	r18, r18
     fa8:	33 1f       	adc	r19, r19
     faa:	44 1f       	adc	r20, r20
     fac:	55 1f       	adc	r21, r21
     fae:	12 96       	adiw	r26, 0x02	; 2
     fb0:	8d 91       	ld	r24, X+
     fb2:	9c 91       	ld	r25, X
     fb4:	13 97       	sbiw	r26, 0x03	; 3
     fb6:	01 97       	sbiw	r24, 0x01	; 1
     fb8:	13 96       	adiw	r26, 0x03	; 3
     fba:	9c 93       	st	X, r25
     fbc:	8e 93       	st	-X, r24
     fbe:	12 97       	sbiw	r26, 0x02	; 2
     fc0:	20 30       	cpi	r18, 0x00	; 0
     fc2:	80 e0       	ldi	r24, 0x00	; 0
     fc4:	38 07       	cpc	r19, r24
     fc6:	80 e0       	ldi	r24, 0x00	; 0
     fc8:	48 07       	cpc	r20, r24
     fca:	80 e4       	ldi	r24, 0x40	; 64
     fcc:	58 07       	cpc	r21, r24
     fce:	58 f3       	brcs	.-42     	; 0xfa6 <__unpack_f+0x66>
     fd0:	14 96       	adiw	r26, 0x04	; 4
     fd2:	2d 93       	st	X+, r18
     fd4:	3d 93       	st	X+, r19
     fd6:	4d 93       	st	X+, r20
     fd8:	5c 93       	st	X, r21
     fda:	17 97       	sbiw	r26, 0x07	; 7
     fdc:	08 95       	ret
     fde:	2f 3f       	cpi	r18, 0xFF	; 255
     fe0:	31 05       	cpc	r19, r1
     fe2:	79 f4       	brne	.+30     	; 0x1002 <__unpack_f+0xc2>
     fe4:	41 15       	cp	r20, r1
     fe6:	51 05       	cpc	r21, r1
     fe8:	61 05       	cpc	r22, r1
     fea:	71 05       	cpc	r23, r1
     fec:	19 f4       	brne	.+6      	; 0xff4 <__unpack_f+0xb4>
     fee:	84 e0       	ldi	r24, 0x04	; 4
     ff0:	8c 93       	st	X, r24
     ff2:	08 95       	ret
     ff4:	64 ff       	sbrs	r22, 4
     ff6:	03 c0       	rjmp	.+6      	; 0xffe <__unpack_f+0xbe>
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	8c 93       	st	X, r24
     ffc:	12 c0       	rjmp	.+36     	; 0x1022 <__unpack_f+0xe2>
     ffe:	1c 92       	st	X, r1
    1000:	10 c0       	rjmp	.+32     	; 0x1022 <__unpack_f+0xe2>
    1002:	2f 57       	subi	r18, 0x7F	; 127
    1004:	30 40       	sbci	r19, 0x00	; 0
    1006:	13 96       	adiw	r26, 0x03	; 3
    1008:	3c 93       	st	X, r19
    100a:	2e 93       	st	-X, r18
    100c:	12 97       	sbiw	r26, 0x02	; 2
    100e:	83 e0       	ldi	r24, 0x03	; 3
    1010:	8c 93       	st	X, r24
    1012:	87 e0       	ldi	r24, 0x07	; 7
    1014:	44 0f       	add	r20, r20
    1016:	55 1f       	adc	r21, r21
    1018:	66 1f       	adc	r22, r22
    101a:	77 1f       	adc	r23, r23
    101c:	8a 95       	dec	r24
    101e:	d1 f7       	brne	.-12     	; 0x1014 <__unpack_f+0xd4>
    1020:	70 64       	ori	r23, 0x40	; 64
    1022:	14 96       	adiw	r26, 0x04	; 4
    1024:	4d 93       	st	X+, r20
    1026:	5d 93       	st	X+, r21
    1028:	6d 93       	st	X+, r22
    102a:	7c 93       	st	X, r23
    102c:	17 97       	sbiw	r26, 0x07	; 7
    102e:	08 95       	ret

00001030 <__fpcmp_parts_f>:
    1030:	1f 93       	push	r17
    1032:	dc 01       	movw	r26, r24
    1034:	fb 01       	movw	r30, r22
    1036:	9c 91       	ld	r25, X
    1038:	92 30       	cpi	r25, 0x02	; 2
    103a:	08 f4       	brcc	.+2      	; 0x103e <__fpcmp_parts_f+0xe>
    103c:	47 c0       	rjmp	.+142    	; 0x10cc <__fpcmp_parts_f+0x9c>
    103e:	80 81       	ld	r24, Z
    1040:	82 30       	cpi	r24, 0x02	; 2
    1042:	08 f4       	brcc	.+2      	; 0x1046 <__fpcmp_parts_f+0x16>
    1044:	43 c0       	rjmp	.+134    	; 0x10cc <__fpcmp_parts_f+0x9c>
    1046:	94 30       	cpi	r25, 0x04	; 4
    1048:	51 f4       	brne	.+20     	; 0x105e <__fpcmp_parts_f+0x2e>
    104a:	11 96       	adiw	r26, 0x01	; 1
    104c:	1c 91       	ld	r17, X
    104e:	84 30       	cpi	r24, 0x04	; 4
    1050:	99 f5       	brne	.+102    	; 0x10b8 <__fpcmp_parts_f+0x88>
    1052:	81 81       	ldd	r24, Z+1	; 0x01
    1054:	68 2f       	mov	r22, r24
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	61 1b       	sub	r22, r17
    105a:	71 09       	sbc	r23, r1
    105c:	3f c0       	rjmp	.+126    	; 0x10dc <__fpcmp_parts_f+0xac>
    105e:	84 30       	cpi	r24, 0x04	; 4
    1060:	21 f0       	breq	.+8      	; 0x106a <__fpcmp_parts_f+0x3a>
    1062:	92 30       	cpi	r25, 0x02	; 2
    1064:	31 f4       	brne	.+12     	; 0x1072 <__fpcmp_parts_f+0x42>
    1066:	82 30       	cpi	r24, 0x02	; 2
    1068:	b9 f1       	breq	.+110    	; 0x10d8 <__fpcmp_parts_f+0xa8>
    106a:	81 81       	ldd	r24, Z+1	; 0x01
    106c:	88 23       	and	r24, r24
    106e:	89 f1       	breq	.+98     	; 0x10d2 <__fpcmp_parts_f+0xa2>
    1070:	2d c0       	rjmp	.+90     	; 0x10cc <__fpcmp_parts_f+0x9c>
    1072:	11 96       	adiw	r26, 0x01	; 1
    1074:	1c 91       	ld	r17, X
    1076:	11 97       	sbiw	r26, 0x01	; 1
    1078:	82 30       	cpi	r24, 0x02	; 2
    107a:	f1 f0       	breq	.+60     	; 0x10b8 <__fpcmp_parts_f+0x88>
    107c:	81 81       	ldd	r24, Z+1	; 0x01
    107e:	18 17       	cp	r17, r24
    1080:	d9 f4       	brne	.+54     	; 0x10b8 <__fpcmp_parts_f+0x88>
    1082:	12 96       	adiw	r26, 0x02	; 2
    1084:	2d 91       	ld	r18, X+
    1086:	3c 91       	ld	r19, X
    1088:	13 97       	sbiw	r26, 0x03	; 3
    108a:	82 81       	ldd	r24, Z+2	; 0x02
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	82 17       	cp	r24, r18
    1090:	93 07       	cpc	r25, r19
    1092:	94 f0       	brlt	.+36     	; 0x10b8 <__fpcmp_parts_f+0x88>
    1094:	28 17       	cp	r18, r24
    1096:	39 07       	cpc	r19, r25
    1098:	bc f0       	brlt	.+46     	; 0x10c8 <__fpcmp_parts_f+0x98>
    109a:	14 96       	adiw	r26, 0x04	; 4
    109c:	8d 91       	ld	r24, X+
    109e:	9d 91       	ld	r25, X+
    10a0:	0d 90       	ld	r0, X+
    10a2:	bc 91       	ld	r27, X
    10a4:	a0 2d       	mov	r26, r0
    10a6:	24 81       	ldd	r18, Z+4	; 0x04
    10a8:	35 81       	ldd	r19, Z+5	; 0x05
    10aa:	46 81       	ldd	r20, Z+6	; 0x06
    10ac:	57 81       	ldd	r21, Z+7	; 0x07
    10ae:	28 17       	cp	r18, r24
    10b0:	39 07       	cpc	r19, r25
    10b2:	4a 07       	cpc	r20, r26
    10b4:	5b 07       	cpc	r21, r27
    10b6:	18 f4       	brcc	.+6      	; 0x10be <__fpcmp_parts_f+0x8e>
    10b8:	11 23       	and	r17, r17
    10ba:	41 f0       	breq	.+16     	; 0x10cc <__fpcmp_parts_f+0x9c>
    10bc:	0a c0       	rjmp	.+20     	; 0x10d2 <__fpcmp_parts_f+0xa2>
    10be:	82 17       	cp	r24, r18
    10c0:	93 07       	cpc	r25, r19
    10c2:	a4 07       	cpc	r26, r20
    10c4:	b5 07       	cpc	r27, r21
    10c6:	40 f4       	brcc	.+16     	; 0x10d8 <__fpcmp_parts_f+0xa8>
    10c8:	11 23       	and	r17, r17
    10ca:	19 f0       	breq	.+6      	; 0x10d2 <__fpcmp_parts_f+0xa2>
    10cc:	61 e0       	ldi	r22, 0x01	; 1
    10ce:	70 e0       	ldi	r23, 0x00	; 0
    10d0:	05 c0       	rjmp	.+10     	; 0x10dc <__fpcmp_parts_f+0xac>
    10d2:	6f ef       	ldi	r22, 0xFF	; 255
    10d4:	7f ef       	ldi	r23, 0xFF	; 255
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <__fpcmp_parts_f+0xac>
    10d8:	60 e0       	ldi	r22, 0x00	; 0
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	cb 01       	movw	r24, r22
    10de:	1f 91       	pop	r17
    10e0:	08 95       	ret

000010e2 <__prologue_saves__>:
    10e2:	2f 92       	push	r2
    10e4:	3f 92       	push	r3
    10e6:	4f 92       	push	r4
    10e8:	5f 92       	push	r5
    10ea:	6f 92       	push	r6
    10ec:	7f 92       	push	r7
    10ee:	8f 92       	push	r8
    10f0:	9f 92       	push	r9
    10f2:	af 92       	push	r10
    10f4:	bf 92       	push	r11
    10f6:	cf 92       	push	r12
    10f8:	df 92       	push	r13
    10fa:	ef 92       	push	r14
    10fc:	ff 92       	push	r15
    10fe:	0f 93       	push	r16
    1100:	1f 93       	push	r17
    1102:	cf 93       	push	r28
    1104:	df 93       	push	r29
    1106:	cd b7       	in	r28, 0x3d	; 61
    1108:	de b7       	in	r29, 0x3e	; 62
    110a:	ca 1b       	sub	r28, r26
    110c:	db 0b       	sbc	r29, r27
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	f8 94       	cli
    1112:	de bf       	out	0x3e, r29	; 62
    1114:	0f be       	out	0x3f, r0	; 63
    1116:	cd bf       	out	0x3d, r28	; 61
    1118:	09 94       	ijmp

0000111a <__epilogue_restores__>:
    111a:	2a 88       	ldd	r2, Y+18	; 0x12
    111c:	39 88       	ldd	r3, Y+17	; 0x11
    111e:	48 88       	ldd	r4, Y+16	; 0x10
    1120:	5f 84       	ldd	r5, Y+15	; 0x0f
    1122:	6e 84       	ldd	r6, Y+14	; 0x0e
    1124:	7d 84       	ldd	r7, Y+13	; 0x0d
    1126:	8c 84       	ldd	r8, Y+12	; 0x0c
    1128:	9b 84       	ldd	r9, Y+11	; 0x0b
    112a:	aa 84       	ldd	r10, Y+10	; 0x0a
    112c:	b9 84       	ldd	r11, Y+9	; 0x09
    112e:	c8 84       	ldd	r12, Y+8	; 0x08
    1130:	df 80       	ldd	r13, Y+7	; 0x07
    1132:	ee 80       	ldd	r14, Y+6	; 0x06
    1134:	fd 80       	ldd	r15, Y+5	; 0x05
    1136:	0c 81       	ldd	r16, Y+4	; 0x04
    1138:	1b 81       	ldd	r17, Y+3	; 0x03
    113a:	aa 81       	ldd	r26, Y+2	; 0x02
    113c:	b9 81       	ldd	r27, Y+1	; 0x01
    113e:	ce 0f       	add	r28, r30
    1140:	d1 1d       	adc	r29, r1
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	de bf       	out	0x3e, r29	; 62
    1148:	0f be       	out	0x3f, r0	; 63
    114a:	cd bf       	out	0x3d, r28	; 61
    114c:	ed 01       	movw	r28, r26
    114e:	08 95       	ret

00001150 <_exit>:
    1150:	f8 94       	cli

00001152 <__stop_program>:
    1152:	ff cf       	rjmp	.-2      	; 0x1152 <__stop_program>
